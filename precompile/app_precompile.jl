precompile(Tuple{typeof(DocStringExtensions.__init__)})
precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(Base.resize!), Array{Base.GMP.BigInt, 1}, Int64})
precompile(Tuple{typeof(Base.resize!), Array{Base.MPFR.BigFloat, 1}, Int64})
precompile(Tuple{typeof(Requires.__init__)})
precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
precompile(Tuple{typeof(Adapt.__init__)})
precompile(Tuple{typeof(Requires.isprecompiling)})
precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
precompile(Tuple{typeof(Requires.loaded), Base.PkgId})
precompile(Tuple{Adapt.var"#9#12"})
precompile(Tuple{typeof(Requires.withpath), Any, String})
precompile(Tuple{typeof(Base.task_local_storage)})
precompile(Tuple{typeof(Base.haskey), Base.IdDict{Any, Any}, Symbol})
precompile(Tuple{typeof(Base.something), String, String, Vararg{String}})
precompile(Tuple{Adapt.var"#10#13"})
precompile(Tuple{typeof(Requires.err), Any, Module, String, String, Any})
precompile(Tuple{Adapt.var"#11#14"})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Requires._include_path), String})
precompile(Tuple{typeof(Base.source_path), Nothing})
precompile(Tuple{typeof(Adapt.include), String})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.getindex), Base.RefValue{Base.CoreLogging.LogLevel}})
precompile(Tuple{typeof(Base.:(>=)), Base.CoreLogging.LogLevel, Base.CoreLogging.LogLevel})
precompile(Tuple{typeof(Base.isassigned), Base.RefValue{Symbol}})
precompile(Tuple{typeof(Base.setindex!), Base.RefValue{Symbol}, Symbol})
precompile(Tuple{typeof(Requires.withnotifications), Any, Vararg{Any}})
precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}, Int64})
precompile(Tuple{typeof(BangBang.NoBang.__init__)})
precompile(Tuple{BangBang.NoBang.var"#6#9"})
precompile(Tuple{BangBang.NoBang.var"#7#10"})
precompile(Tuple{BangBang.NoBang.var"#8#11"})
precompile(Tuple{typeof(BangBang.NoBang.include), String})
precompile(Tuple{typeof(Base.getindex), Base.RefValue{Symbol}})
precompile(Tuple{typeof(BangBang.__init__)})
precompile(Tuple{BangBang.var"#27#39"})
precompile(Tuple{BangBang.var"#28#40"})
precompile(Tuple{BangBang.var"#29#41"})
precompile(Tuple{typeof(BangBang.include), String})
precompile(Tuple{typeof(Requires.callbacks), Base.PkgId})
precompile(Tuple{BangBang.var"#36#48"})
precompile(Tuple{BangBang.var"#37#49"})
precompile(Tuple{BangBang.var"#38#50"})
precompile(Tuple{typeof(Transducers.__init__)})
precompile(Tuple{Transducers.var"#286#301"})
precompile(Tuple{Transducers.var"#287#302"})
precompile(Tuple{Transducers.var"#288#303"})
precompile(Tuple{typeof(Transducers.include), String})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
precompile(Tuple{typeof(Base.foreach), typeof(Base.invokelatest), Array{Function, 1}})
precompile(Tuple{Transducers.var"#289#304"})
precompile(Tuple{Transducers.var"#290#305"})
precompile(Tuple{Transducers.var"#291#306"})
precompile(Tuple{typeof(Zlib_jll.__init__)})
precompile(Tuple{typeof(FilePathsBase.__init__)})
precompile(Tuple{typeof(Libiconv_jll.__init__)})
precompile(Tuple{typeof(Libiconv_jll.find_artifact_dir)})
precompile(Tuple{typeof(Artifacts._artifact_str), Module, String, Base.SubString{String}, String, Base.Dict{String, Any}, Base.SHA1, Base.BinaryPlatforms.Platform, Any})
precompile(Tuple{typeof(Base.invokelatest), Any})
precompile(Tuple{typeof(JLLWrappers.get_julia_libpaths)})
precompile(Tuple{typeof(Base.MainInclude.include), String})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.pkgdir), Module})
precompile(Tuple{typeof(Base.rem), UInt32, Type{Int64}})
precompile(Tuple{typeof(Random.seed!), Int64})
precompile(Tuple{Type{Main.Nuc}, Int32})
precompile(Tuple{Type{Base.Iterators.Filter{Test.var"#16#21", Tuple{}}}, Function, Tuple{}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, Test.var"#16#21", Tuple{}})
precompile(Tuple{Type{Base.Generator{Base.Iterators.Filter{Test.var"#16#21", Tuple{}}, Test.var"#15#20"}}, Function, Base.Iterators.Filter{Test.var"#16#21", Tuple{}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Test.var"#15#20", Base.Iterators.Filter{Test.var"#16#21", Tuple{}}})
precompile(Tuple{typeof(Base._iterator_upper_bound), Base.Generator{Base.Iterators.Filter{Test.var"#16#21", Tuple{}}, Test.var"#15#20"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{Test.var"#16#21", Tuple{}}, Test.var"#15#20"}})
precompile(Tuple{Type{Base.Iterators.Filter{Test.var"#18#23", Tuple{}}}, Function, Tuple{}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, Test.var"#18#23", Tuple{}})
precompile(Tuple{Type{Base.Generator{Base.Iterators.Filter{Test.var"#18#23", Tuple{}}, Test.var"#17#22"}}, Function, Base.Iterators.Filter{Test.var"#18#23", Tuple{}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Test.var"#17#22", Base.Iterators.Filter{Test.var"#18#23", Tuple{}}})
precompile(Tuple{typeof(Base._iterator_upper_bound), Base.Generator{Base.Iterators.Filter{Test.var"#18#23", Tuple{}}, Test.var"#17#22"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{Test.var"#18#23", Tuple{}}, Test.var"#17#22"}})
precompile(Tuple{typeof(Base.filter), Function, Tuple{}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Union{}, 1}, Symbol}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Union{}, 1}, Symbol}, Int64, Int64})
precompile(Tuple{typeof(Base.length), Array{Union{}, 1}})
precompile(Tuple{typeof(Base.:(!=)), Char, Char})
precompile(Tuple{typeof(Base.CoreLogging.logmsg_code), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.length), Array{Test.AbstractTestSet, 1}})
precompile(Tuple{typeof(Test._check_testset), Type, Expr})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Dict{Symbol, Any}})
precompile(Tuple{typeof(Base.push!), Array{Test.AbstractTestSet, 1}, Test.DefaultTestSet})
precompile(Tuple{typeof(Base.copy), Random.TaskLocalRNG})
precompile(Tuple{typeof(Base.isempty), Array{Test.AbstractTestSet, 1}})
precompile(Tuple{typeof(Base.lastindex), Array{Test.AbstractTestSet, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Test.AbstractTestSet, 1}, Int64})
precompile(Tuple{typeof(Base.vect), UInt8, Vararg{UInt8}})
precompile(Tuple{typeof(Base.all), Function, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
precompile(Tuple{typeof(Base.:(==)), Base.Libc.RawFD, Base.Libc.RawFD})
precompile(Tuple{typeof(Base.:(&)), Int32, Int32})
precompile(Tuple{typeof(Base.:(>)), Int32, Int64})
precompile(Tuple{typeof(Base.cconvert), Type, Base.Libc.RawFD})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Base.Libc.RawFD}, Base.Libc.RawFD})
precompile(Tuple{Type{NamedTuple{(:shared,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:shared,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{40}})
precompile(Tuple{typeof(Base.:(|)), UInt64, UInt64})
precompile(Tuple{typeof(Base.:(&)), Int64, UInt32})
precompile(Tuple{typeof(Base.:(>>>)), Int64, Int64})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{IndexableBitVectors.SucVector, 1}}})
precompile(Tuple{typeof(Base.promote_type), Type, Type, Type})
precompile(Tuple{typeof(Base.isequal), Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{UInt8, 1}, Array{Int64, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Array{UInt8, 1}, Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.:(^)), Int64, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{1, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.:(~)), UInt8})
precompile(Tuple{typeof(IntArrays.mask), Type{UInt8}, Int64})
precompile(Tuple{Type{IntArrays.IntArray{1, T, 1} where T}, Array{UInt8, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices._build!), Type{IndexableBitVectors.SucVector}, IntArrays.IntArray{1, UInt8, 1}, Array{IndexableBitVectors.SucVector, 1}})
precompile(Tuple{typeof(Base.:(>>)), UInt8, Int64})
precompile(Tuple{typeof(Base.:(&)), UInt8, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{1, UInt8, IndexableBitVectors.SucVector}}, Tuple{IndexableBitVectors.SucVector}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{1, UInt8, IndexableBitVectors.SucVector}, Int64, Array{UInt8, 1}, IndexableBitVectors.SucVector, Array{Int64, 1}})
precompile(Tuple{typeof(Test.eval_test), Expr, Expr, LineNumberNode, Bool})
precompile(Tuple{Type{Test.Returned}, Any, Any, LineNumberNode})
precompile(Tuple{typeof(Base.copy!), Random.TaskLocalRNG, Random.Xoshiro})
precompile(Tuple{typeof(Random.set_global_seed!), Int64})
precompile(Tuple{typeof(Base.pop!), Array{Test.AbstractTestSet, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt8, 1}})
precompile(Tuple{Type{IntArrays.IntArray{2, T, 1} where T}, Array{UInt8, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices._build!), Type{IndexableBitVectors.SucVector}, IntArrays.IntArray{2, UInt8, 1}, Array{IndexableBitVectors.SucVector, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, UInt8, IndexableBitVectors.SucVector}}, Tuple{IndexableBitVectors.SucVector, IndexableBitVectors.SucVector}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, UInt8, IndexableBitVectors.SucVector}, Int64, Array{UInt8, 1}, IndexableBitVectors.SucVector, Array{Int64, 1}})
precompile(Tuple{Base.Colon, UInt8, UInt8})
precompile(Tuple{Type{Base.Val{24}}})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{24}})
precompile(Tuple{typeof(Base.rand), Base.UnitRange{UInt8}, Int64})
precompile(Tuple{Type{Array{UInt32, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{UInt32, 1}, Array{Int64, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Array{UInt8, 1}, Array{UInt32, 1}, Int64, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{1, UInt8, IndexableBitVectors.SucVector}, Int64, Array{UInt32, 1}, IndexableBitVectors.SucVector, Array{Int64, 1}})
precompile(Tuple{typeof(Base.vect), Main.Nuc, Vararg{Main.Nuc}})
precompile(Tuple{Type{Main.DNASeq}, Array{Main.Nuc, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Main.DNASeq, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Main.DNASeq, Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{8}})
precompile(Tuple{Type{Base.Val{16}}})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{16}})
precompile(Tuple{Type{Array{UInt16, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{UInt16, 1}, Array{Int64, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Array{UInt8, 1}, Array{UInt16, 1}, Int64, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, UInt8, IndexableBitVectors.SucVector}, Int64, Array{UInt16, 1}, IndexableBitVectors.SucVector, Array{Int64, 1}})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{10}})
precompile(Tuple{Type{NamedTuple{(:mmap,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:mmap,), Tuple{Bool}}, Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Mmap.mmap), Type{Array{UInt16, 1}}, Int64})
precompile(Tuple{typeof(Base.haskey), Base.EnvDict, String})
precompile(Tuple{typeof(Base.CoreLogging._invoked_shouldlog), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.front), Tuple{}})
precompile(Tuple{Type{NamedTuple{(:segments,), T} where T<:Tuple}, Tuple{Tuple{String}}})
precompile(Tuple{Type{NamedTuple{(:segments,), Tuple{Tuple{String}}}}, Tuple{Tuple{String}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:segments,), Tuple{Tuple{String}}}})
precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:segments,), Tuple{Tuple{String}}}, Tuple{Symbol}})
precompile(Tuple{Type{Base.Pairs{Symbol, Tuple{String}, Tuple{Symbol}, NamedTuple{(:segments,), Tuple{Tuple{String}}}}}, NamedTuple{(:segments,), Tuple{Tuple{String}}}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.convert), Type{NamedTuple{(:segments,), Tuple{Tuple{String}}}}, NamedTuple{(:segments,), Tuple{Tuple{String}}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Tuple{String}, Tuple{Symbol}, NamedTuple{(:segments,), Tuple{Tuple{String}}}}})
precompile(Tuple{typeof(Base.values), Base.Pairs{Symbol, Tuple{String}, Tuple{Symbol}, NamedTuple{(:segments,), Tuple{Tuple{String}}}}})
precompile(Tuple{Type{FilePathsBase.PosixPath}, Tuple{String}})
precompile(Tuple{FilePathsBase.var"##PosixPath#46", String, Type{FilePathsBase.PosixPath}, Tuple{String}})
precompile(Tuple{Type{FilePathsBase.PosixPath}, Tuple{String}, String})
precompile(Tuple{Mmap.var"#3#5"{Ptr{Nothing}, Int64}, Array{UInt16, 1}})
precompile(Tuple{Mmap.var"#3#5"{Ptr{Nothing}, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Logging.default_metafmt), Base.CoreLogging.LogLevel, Any, Any, Any, Any, Any})
precompile(Tuple{Base.var"##printstyled#917", Bool, Bool, Bool, Bool, Bool, Symbol, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.restore), ARTEMIS.FMIndexes.FMIndex{1, UInt8}})
precompile(Tuple{typeof(Base.:(==)), Array{UInt8, 1}, Array{UInt8, 1}})
precompile(Tuple{Type{Array{UInt8, 1}}, String})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{7, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt8, 1}})
precompile(Tuple{Type{IntArrays.IntArray{7, T, 1} where T}, Array{UInt8, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices._build!), Type{IndexableBitVectors.SucVector}, IntArrays.IntArray{7, UInt8, 1}, Array{IndexableBitVectors.SucVector, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{7, UInt8, IndexableBitVectors.SucVector}}, Tuple{IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{7, UInt8, IndexableBitVectors.SucVector}, Int64, Array{UInt8, 1}, IndexableBitVectors.SucVector, Array{Int64, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.restore), ARTEMIS.FMIndexes.FMIndex{7, UInt8}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.restore), ARTEMIS.FMIndexes.FMIndex{2, UInt8}})
precompile(Tuple{typeof(Random.randstring), Int64})
precompile(Tuple{typeof(Base.count), Array{UInt8, 1}, ARTEMIS.FMIndexes.FMIndex{1, UInt8}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, String, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, String, Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.count), String, ARTEMIS.FMIndexes.FMIndex{7, UInt8}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locateall), Array{UInt8, 1}, ARTEMIS.FMIndexes.FMIndex{1, UInt8}})
precompile(Tuple{typeof(Base.:(==)), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Int64, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locate), String, ARTEMIS.FMIndexes.FMIndex{7, UInt8}})
precompile(Tuple{typeof(Base.:(|>)), ARTEMIS.FMIndexes.LocationIterator{7, UInt8}, typeof(Base.collect)})
precompile(Tuple{typeof(Base.:(|>)), Array{Any, 1}, typeof(Base.sort)})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, Int64, Int64})
precompile(Tuple{typeof(Base.:(==)), Array{Any, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locateall), String, ARTEMIS.FMIndexes.FMIndex{7, UInt8}})
precompile(Tuple{typeof(Base.:(|>)), Array{Int64, 1}, typeof(Base.sort)})
precompile(Tuple{typeof(Base.isempty), ARTEMIS.FMIndexes.LocationIterator{7, UInt8}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locateall), Array{UInt8, 1}, ARTEMIS.FMIndexes.FMIndex{2, UInt16}})
precompile(Tuple{Main.var"#linear_search#1", Array{UInt8, 1}, Array{UInt8, 1}})
precompile(Tuple{typeof(Combinatorics.permutations), Array{UInt8, 1}})
precompile(Tuple{typeof(Base.iterate), Combinatorics.Permutations{Array{UInt8, 1}}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locateall), Array{UInt8, 1}, ARTEMIS.FMIndexes.FMIndex{2, UInt8}})
precompile(Tuple{typeof(Base.iterate), Combinatorics.Permutations{Array{UInt8, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.read), String})
precompile(Tuple{typeof(Base.copy), Array{UInt8, 1}})
precompile(Tuple{Type{NamedTuple{(:r,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:r,), Tuple{Int64}}, Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, String})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, Base.CodeUnits{UInt8, String}, Array{UInt16, 1}, Int64, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{7, UInt8, IndexableBitVectors.SucVector}, Int64, Array{UInt16, 1}, IndexableBitVectors.SucVector, Array{Int64, 1}})
precompile(Tuple{typeof(Base.count), String, ARTEMIS.FMIndexes.FMIndex{7, UInt16}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locateall), String, ARTEMIS.FMIndexes.FMIndex{7, UInt16}})
precompile(Tuple{typeof(Base.something), Nothing, Base.UnitRange{Int64}})
precompile(Tuple{Main.var"#linear_search_#2", String, String})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.restore), ARTEMIS.FMIndexes.FMIndex{7, UInt16}})
precompile(Tuple{Base.var"##printstyled#917", Bool, Bool, Bool, Bool, Bool, Symbol, typeof(Base.printstyled), Base.TTY, String, Vararg{Any}})
precompile(Tuple{Base.var"#with_output_color##kw", NamedTuple{(:bold, :underline, :blink, :reverse, :hidden), Tuple{Bool, Bool, Bool, Bool, Bool}}, typeof(Base.with_output_color), Function, Symbol, Base.TTY, String, Vararg{Any}})
precompile(Tuple{Base.var"#printstyled##kw", NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), String, String})
precompile(Tuple{typeof(Base.println), Base.TTY})
precompile(Tuple{Base.var"#printstyled##kw", NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.printstyled), String, String})
precompile(Tuple{typeof(Base.Filesystem.tempname)})
precompile(Tuple{typeof(Base.Filesystem.mkpath), String})
precompile(Tuple{typeof(Base.readlines), String})
precompile(Tuple{Type{Base.Set{T} where T}, Array{String, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Base.Set{String}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{String, 1}}}})
precompile(Tuple{Type{NamedTuple{(:prog, :description, :epilog, :version, :add_version), T} where T<:Tuple}, Tuple{String, String, String, String, Bool}})
precompile(Tuple{Type{NamedTuple{(:prog, :description, :epilog, :version, :add_version), Tuple{String, String, String, String, Bool}}}, Tuple{String, String, String, String, Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:prog, :description, :epilog, :version, :add_version), Tuple{String, String, String, String, Bool}}, Symbol})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, UInt64})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Char})
precompile(Tuple{typeof(Base.trailing_zeros), Int64})
precompile(Tuple{typeof(BioSequences.bitindex), BioSequences.BitsPerSymbol{4}, Type{UInt64}, Int64})
precompile(Tuple{typeof(BioSequences.index), BioSequences.BitIndex{4, UInt64}})
precompile(Tuple{typeof(BioSequences.offset), BioSequences.BitIndex{4, UInt64}})
precompile(Tuple{typeof(Base.:(+)), BioSequences.BitIndex{4, UInt64}, Int64})
precompile(Tuple{typeof(Base.convert), Type{BioSymbols.DNA}, BioSymbols.DNA})
precompile(Tuple{typeof(BioSequences.encode), BioSequences.DNAAlphabet{4}, BioSymbols.DNA})
precompile(Tuple{typeof(Base.first), Base.UnitRange{UInt8}})
precompile(Tuple{typeof(Base.last), Base.UnitRange{UInt8}})
precompile(Tuple{typeof(BioSequences.bitindex), BioSequences.BitsPerSymbol{4}, Type{UInt64}, UInt64})
precompile(Tuple{typeof(SplittablesBase.amount), Nothing})
precompile(Tuple{typeof(ThreadsX.Implementations.default_basesize), Nothing})
precompile(Tuple{Type{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}}, Type})
precompile(Tuple{Base.var"##s82#216", Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:basesize,), Tuple{Int64}}}})
precompile(Tuple{Type{Transducers.Completing{typeof(BangBang.append!!)}}, Function})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:init,), Tuple{BangBang.NoBang.Empty{Array{T, 1} where T}}}, Symbol})
precompile(Tuple{Type{Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, Function})
precompile(Tuple{typeof(Transducers.ensurerf), Function})
precompile(Tuple{typeof(Base.convert), Type{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}}, Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}})
precompile(Tuple{typeof(Transducers.initialize), BangBang.NoBang.Empty{Array{T, 1} where T}, Function})
precompile(Tuple{typeof(Transducers.start), Function, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{Type{Base.BottomRF{BioSequences.var"#11#12"}}, Function})
precompile(Tuple{typeof(BangBang.implements), Function, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Base.map), typeof(Base.oneto), Tuple{Int64}})
precompile(Tuple{Transducers.AutoObjectsReStacker.var"##s1#1", Any, Any})
precompile(Tuple{typeof(Base.parentmodule), DataType})
precompile(Tuple{typeof(Transducers.completebasecase), Function, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(BangBang.may), Function, BangBang.NoBang.Empty{Array{T, 1} where T}, Vararg{Any}})
precompile(Tuple{typeof(Base.argtail), BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.privatestate), Type{Transducers.Reduction{Transducers.FlagFirst, Transducers.BottomRF{Transducers.SideEffect{Transducers.var"#239#240"{Base.GenericIOBuffer{Array{UInt8, 1}}, Nothing, String, String, String}}}}}, Bool, Nothing})
precompile(Tuple{typeof(Base.first), Tuple{Bool, Nothing}})
precompile(Tuple{Type{BangBang.NoBang.Empty{T} where T}, Type})
precompile(Tuple{typeof(Base.convert), Type{Type{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned}}, Type{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned}})
precompile(Tuple{Type{Transducers.Map{ARTEMIS.var"#77#82"}}, Function})
precompile(Tuple{typeof(InitialValues.asmonoid), Function})
precompile(Tuple{typeof(Transducers._asmonoid), Function})
precompile(Tuple{Type{Transducers.Map{ARTEMIS.var"#78#83"}}, Function})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:init,), Tuple{BangBang.NoBang.Empty{Base.Set{T} where T}}}, Symbol})
precompile(Tuple{Type{Base.UnitRange{UInt32}}, Int64, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.UnitRange{UInt32}}, Base.UnitRange{UInt32}})
precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:simd,), Tuple{Base.Val{true}}}, Tuple{Symbol}})
precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:simd,), Tuple{Base.Val{true}}}}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:init, :simd), Tuple{BangBang.NoBang.Empty{Array{T, 1} where T}, Base.Val{true}}}, Symbol})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:simd,), Tuple{Base.Val{true}}}, Symbol})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:dims,), Tuple{Base.Colon}}, Symbol})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.identity), Tuple{Int64}}}, Function, Tuple{Int64}, Nothing})
precompile(Tuple{typeof(Base.ntuple), Base.Returns{Base.OneTo{Int64}}, Base.Val{1}})
precompile(Tuple{Type{MethodError}, Any, Any, UInt64})
precompile(Tuple{Type{MethodError}, Any, Any})
precompile(Tuple{typeof(Base._tuple_any), Function, Tuple{}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Array{BioSymbols.DNA, 1}, 1}}})
precompile(Tuple{typeof(Printf.base), Type})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{UInt8}}, Ptr{UInt8}})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{UInt8}}, Ptr{UInt8}})
precompile(Tuple{typeof(Base.:(*)), Int64, Int64, Int64, Int64})
precompile(Tuple{Type{Transducers.Map{ARTEMIS.var"#97#102"}}, Function})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.Map{ARTEMIS.var"#97#102"}})
precompile(Tuple{Type{Transducers.TransducerFolder}, Transducers.Transducer})
precompile(Tuple{Type{Transducers.Map{ARTEMIS.var"#98#103"}}, Function})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.Map{ARTEMIS.var"#98#103"}})
precompile(Tuple{Type{Transducers.Map{ARTEMIS.var"#99#104"}}, Function})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.Map{ARTEMIS.var"#99#104"}})
precompile(Tuple{typeof(TranscodingStreams.checkbufsize), Int64})
precompile(Tuple{Type{NamedTuple{(:eager,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:eager,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(TranscodingStreams.throw_panic_error)})
precompile(Tuple{Type{Transducers.Map{typeof(ARTEMIS.isambig)}}, Function})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.Map{typeof(ARTEMIS.isambig)}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{StaticArraysCore.Dynamic, 1}}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, Tuple{StaticArraysCore.Dynamic}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, Type{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Int64}, StaticArrays.Length{StaticArraysCore.Dynamic()}})
precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{Base.ExtremaMap{typeof(Base.identity)}, typeof(Base._extrema_rf)}, Type{Any}})
precompile(Tuple{Type{Base.CanonicalIndexError}, String, Any})
precompile(Tuple{Base.var"##s78#211", Any, Any, Any})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.UnitRange{Int64}, Base.HasShape{1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Base.var"#212#214"{DataType, Array{Int64, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, Base.var"#212#214"{DataType, Array{Int64, 1}}}})
precompile(Tuple{typeof(BioCore.Exceptions.missingerror), Symbol})
precompile(Tuple{typeof(Base.promote_result), Type, Type, Type{Union{}}, Type{Union{Nothing, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.promote_result), Type, Type, Type{Union{Nothing, Base.UnitRange{Int64}}}, Type{Union{}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}}})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{String, 1}}}, Int64})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Base.HasShape{1}, 1}}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:r,), Tuple{Int64}}, Symbol})
precompile(Tuple{typeof(Base.rem), UInt128, Type{UInt64}})
precompile(Tuple{typeof(Twiddle.repeatpattern), Type{UInt64}, UInt8})
precompile(Tuple{typeof(Base.:(>)), UInt64, Int64})
precompile(Tuple{typeof(Base.ceil), Type{Integer}, Float64})
precompile(Tuple{typeof(Base.isodd), Int64})
precompile(Tuple{typeof(Base.rem), UInt16, Type{UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Float64})
precompile(Tuple{typeof(Base.Broadcast.extrude), Float64})
precompile(Tuple{typeof(Base.Broadcast._getindex), Tuple{Float64}, Int64})
precompile(Tuple{typeof(Base.getindex), Float64})
precompile(Tuple{typeof(Base.:(|)), Base.Missing, Bool})
precompile(Tuple{typeof(Base.promote_typejoin_union), Type{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{typeof(Base.promote_typejoin_union), Type{Base.SubArray{Bool, 1, Base.BitArray{1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Tuple{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{Bool, 1, Base.BitArray{1}, Tuple{Base.UnitRange{Int64}}, true}}, 1}}})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.BitArray{1}}}, Int64})
precompile(Tuple{Type{Transducers.Map{ARTEMIS.var"#130#135"}}, Function})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.Map{ARTEMIS.var"#130#135"}})
precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:init,), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}}})
precompile(Tuple{Type{Transducers.Completing{typeof(Base.vcat)}}, Function})
precompile(Tuple{Type{Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Function})
precompile(Tuple{typeof(BioSequences.nextposition), BioSequences.BitIndex{4, UInt64}})
precompile(Tuple{typeof(Base.iszero), UInt64})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}}})
precompile(Tuple{Type{Base.Broadcast.BroadcastFunction{typeof(Base.:(|))}}, Function})
precompile(Tuple{Type{Base.BottomRF{Base.Broadcast.BroadcastFunction{typeof(Base.:(|))}}}, Function})
precompile(Tuple{Type{NamedTuple{(:makeunique, :copycols), T} where T<:Tuple}, Tuple{Bool, Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:makeunique, :copycols), Tuple{Bool, Bool}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:makeunique,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:makeunique,), Tuple{Bool}}, Symbol})
precompile(Tuple{Type{InvertedIndices.InvertedIndex{S} where S}, Symbol})
precompile(Tuple{Type{NamedTuple{(:copycols, :renamecols, :threads), T} where T<:Tuple}, Tuple{Bool, Bool, Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:copycols, :renamecols, :threads), Tuple{Bool, Bool, Bool}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:copycols, :keeprows, :renamecols), T} where T<:Tuple}, Tuple{Bool, Bool, Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}}, Symbol})
precompile(Tuple{typeof(Base.axes), Base.UnitRange{Int64}})
precompile(Tuple{Type{NamedTuple{(:rev, :by), T} where T<:Tuple}, Tuple{Bool, ARTEMIS.var"#175#210"}})
precompile(Tuple{Type{Transducers.Completing{typeof(ThreadsX.Implementations.return_nothing)}}, Function})
precompile(Tuple{Type{Transducers.BottomRF{Transducers.Completing{typeof(ThreadsX.Implementations.return_nothing)}}}, Function})
precompile(Tuple{Type{Transducers.Reduction{X, I} where I where X<:Transducers.Transducer}, Transducers.IdentityTransducer, Function})
precompile(Tuple{typeof(Transducers.skipcomplete), Function})
precompile(Tuple{Type{NamedTuple{(:dist,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:dist,), Tuple{Int64}}, Symbol})
precompile(Tuple{typeof(BioSequences.bitindex), BioSequences.BitsPerSymbol{2}, Type{UInt64}, Int64})
precompile(Tuple{typeof(BioSequences.offset), BioSequences.BitIndex{2, UInt64}})
precompile(Tuple{typeof(BioSequences.nextposition), BioSequences.BitIndex{2, UInt64}})
precompile(Tuple{typeof(BioSequences.bitmask), Type{UInt64}, Int64})
precompile(Tuple{typeof(BioSequences.bitindex), BioSequences.BitsPerSymbol{2}, Type{UInt64}, UInt64})
precompile(Tuple{typeof(BioSequences.index), BioSequences.BitIndex{2, UInt64}})
precompile(Tuple{typeof(Base.something), Nothing, Char})
precompile(Tuple{typeof(Base.isascii), Char})
precompile(Tuple{typeof(Base.rem), Char, Type{UInt8}})
precompile(Tuple{typeof(CSV.tup), Char})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{22}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Nothing}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Nothing}})
precompile(Tuple{Type{CSV.Arg}, Type})
precompile(Tuple{Type{CSV.Arg}, Bool})
precompile(Tuple{typeof(Base.convert), Type{Integer}, Int64})
precompile(Tuple{typeof(Parsers.token), Nothing, String})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Integer}}, Int64})
precompile(Tuple{typeof(Base.getindex), CSV.Arg})
precompile(Tuple{Type{CSV.Arg}, Int64})
precompile(Tuple{Type{CSV.Arg}, String})
precompile(Tuple{Type{CSV.Arg}, Char})
precompile(Tuple{Type{CSV.Arg}, UInt8})
precompile(Tuple{Type{CSV.Arg}, Array{String, 1}})
precompile(Tuple{Type{CSV.Arg}, Tuple{Float64, Int64}})
precompile(Tuple{typeof(Base.convert), Type{Union{Char, UInt8}}, Char})
precompile(Tuple{typeof(Base.convert), Type{Union{Char, UInt8}}, UInt8})
precompile(Tuple{typeof(Base.convert), Type{Union{Function, Real, Tuple, Base.AbstractDict{K, V} where V where K, AbstractArray{T, 1} where T, Type}}, Tuple{Float64, Int64}})
precompile(Tuple{Type{NamedTuple{(:validate,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:validate,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(CSV.getpool), Tuple{Float64, Int64}})
precompile(Tuple{typeof(Base.hash), UInt64, UInt64})
precompile(Tuple{Type{Base.Generator{Tuple{}, FilePathsBase.var"#10#11"}}, Function, Tuple{}})
precompile(Tuple{Type{NamedTuple{(:ntasks,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:ntasks,), Tuple{Int64}}})
precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:ntasks,), Tuple{Int64}}}})
precompile(Tuple{Type{NamedTuple{(:ntasks,), Tuple{Int64}}}, Tuple{Int64}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Base.Missing, UInt32})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:copycols,), Tuple{Nothing}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:copycols,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:copycols,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(DataAPI.metadatasupport), Type})
precompile(Tuple{typeof(DataAPI.colmetadatasupport), Type})
precompile(Tuple{Type{Pair{A, B} where B where A}, Function, Symbol})
precompile(Tuple{typeof(Base.sym_in), Symbol, Tuple{Vararg{Symbol}}})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{Symbol, 1}, Base.UnitRange{Int64}}}, Int64})
precompile(Tuple{Type{NamedTuple{(:keepkeys, :ungroup, :copycols, :keeprows, :renamecols, :threads), T} where T<:Tuple}, Tuple{Bool, Bool, Bool, Bool, Bool, Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:keepkeys, :ungroup, :copycols, :keeprows, :renamecols, :threads), Tuple{Bool, Bool, Bool, Bool, Bool, Bool}}, Symbol})
precompile(Tuple{typeof(ARTEMIS.main), Array{String, 1}})
precompile(Tuple{ArgParse.var"#ArgParseSettings#5#6", AbstractString, AbstractString, AbstractString, AbstractString, AbstractString, Bool, Bool, Any, Bool, Bool, Bool, Bool, Bool, Function, Bool, Bool, Bool, Type{ArgParse.ArgParseSettings}})
precompile(Tuple{typeof(ArgParse.check_prefix_chars), Any})
precompile(Tuple{Type{Base.Set{Char}}})
precompile(Tuple{typeof(Base.iterate), Base.Set{Char}})
precompile(Tuple{typeof(Base.convert), Type{AbstractString}, String})
precompile(Tuple{typeof(Base.convert), Type{Base.Set{Char}}, Base.Set{Char}})
precompile(Tuple{typeof(Base.copy), Array{ArgParse.ArgParseGroup, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{ArgParse.ArgParseGroup, 1}}, Array{ArgParse.ArgParseGroup, 1}})
precompile(Tuple{Type{ArgParse.ArgParseTable}})
precompile(Tuple{typeof(Base.getindex), Type{ArgParse.ArgParseField}})
precompile(Tuple{typeof(Base.convert), Type{Array{ArgParse.ArgParseField, 1}}, Array{ArgParse.ArgParseField, 1}})
precompile(Tuple{Type{Base.Dict{AbstractString, Any}}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{AbstractString, Any}}, Base.Dict{AbstractString, Any}})
precompile(Tuple{typeof(Base.convert), Type{ArgParse.ArgParseTable}, ArgParse.ArgParseTable})
precompile(Tuple{typeof(Base.convert), Type{Function}, typeof(ArgParse.default_handler)})
precompile(Tuple{Type{NamedTuple{(:help, :action), T} where T<:Tuple}, Tuple{String, Symbol}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:help, :action), Tuple{String, Symbol}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:help, :action), Tuple{String, Symbol}}})
precompile(Tuple{ArgParse.var"#add_arg_field!##kw", Any, typeof(ArgParse.add_arg_field!), ArgParse.ArgParseSettings, Union{Array{T, 1}, T} where T<:AbstractString})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:help, :action), Tuple{String, Symbol}}})
precompile(Tuple{ArgParse.var"##add_arg_field!#23", Base.Pairs{Symbol, V, Tuple{Vararg{Symbol, N}}, NamedTuple{names, T}} where T<:Tuple{Vararg{Any, N}} where names where N where V, typeof(ArgParse.add_arg_field!), ArgParse.ArgParseSettings, Union{Array{T, 1}, T} where T<:AbstractString})
precompile(Tuple{typeof(ArgParse.check_name_format), Union{Array{T, 1}, T} where T<:AbstractString})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:help, :action), Tuple{String, Symbol}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:help, :action), Tuple{String, Symbol}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ArgParse.var"#24#26", Base.Dict{Symbol, Any}})
precompile(Tuple{Type{Base.Dict{Symbol, Bool}}, Base.Generator{Base.Dict{Symbol, Any}, ArgParse.var"#24#26"}})
precompile(Tuple{ArgParse.var"#24#26", Any})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{Symbol, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{Symbol, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.haskey), Base.Dict{Symbol, Any}, Symbol})
precompile(Tuple{Type{ArgParse.ArgConsumerType}})
precompile(Tuple{Type{ArgParse.ArgConsumerType}, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Union{Int64, Symbol}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), ArgParse.ArgParseSettings, Symbol})
precompile(Tuple{typeof(Base.iterate), Base.Dict{Symbol, Bool}})
precompile(Tuple{typeof(Base.iterate), Base.Dict{Symbol, Bool}, Int64})
precompile(Tuple{typeof(ArgParse.check_type), Any, Type, AbstractString})
precompile(Tuple{typeof(Base.first), Array{String, 1}})
precompile(Tuple{typeof(ArgParse.check_action_is_valid), Symbol})
precompile(Tuple{typeof(ArgParse.check_nargs_and_action), ArgParse.ArgConsumerType, Symbol})
precompile(Tuple{typeof(ArgParse.is_flag_action), Symbol})
precompile(Tuple{typeof(Base.:(∉)), Symbol, Array{Symbol, 1}})
precompile(Tuple{typeof(ArgParse.is_command_action), Symbol})
precompile(Tuple{typeof(Base.getproperty), ArgParse.ArgConsumerType, Symbol})
precompile(Tuple{typeof(Base.:(!=)), Symbol, Symbol})
precompile(Tuple{Type{ArgParse.ArgParseField}})
precompile(Tuple{typeof(Base.getindex), Type{AbstractString}})
precompile(Tuple{typeof(Base.convert), Type{Array{AbstractString, 1}}, Array{AbstractString, 1}})
precompile(Tuple{typeof(Base.convert), Type{Type}, Type})
precompile(Tuple{typeof(Base.convert), Type{ArgParse.ArgConsumerType}, ArgParse.ArgConsumerType})
precompile(Tuple{typeof(Base.convert), Type{Function}, ArgParse.var"#3#4"})
precompile(Tuple{typeof(Base.convert), Type{Union{AbstractString, Array{var"#s4", 1} where var"#s4"<:AbstractString}}, String})
precompile(Tuple{typeof(ArgParse.name_to_fieldnames!), ArgParse.ArgParseSettings, Union{Array{T, 1}, T} where T<:AbstractString})
precompile(Tuple{typeof(Base.foreach), ArgParse.var"#do_one#19"{ArgParse.ArgParseSettings, ArgParse.var"#r#18"{ArgParse.ArgParseSettings}, Array{AbstractString, 1}, Array{AbstractString, 1}, Array{AbstractString, 1}}, Array{String, 1}})
precompile(Tuple{ArgParse.var"#do_one#19"{ArgParse.ArgParseSettings, ArgParse.var"#r#18"{ArgParse.ArgParseSettings}, Array{AbstractString, 1}, Array{AbstractString, 1}, Array{AbstractString, 1}}, Any})
precompile(Tuple{ArgParse.var"#do_one#19"{ArgParse.ArgParseSettings, ArgParse.var"#r#18"{ArgParse.ArgParseSettings}, Array{AbstractString, 1}, Array{AbstractString, 1}, Array{AbstractString, 1}}, Any, Any})
precompile(Tuple{typeof(ArgParse.check_cmd_name), AbstractString})
precompile(Tuple{typeof(Base.occursin), Base.Regex, String})
precompile(Tuple{typeof(Base.push!), Array{AbstractString, 1}, String})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Array{AbstractString, 1}, Array{AbstractString, 1}, Array{AbstractString, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Array{AbstractString, 1}, Array{AbstractString, 1}, Array{AbstractString, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.isempty), Array{AbstractString, 1}})
precompile(Tuple{typeof(ArgParse.auto_dest_name), AbstractString, Array{AbstractString, 1}, Array{AbstractString, 1}, Bool})
precompile(Tuple{ArgParse.var"#r#20"{Bool}, Any})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseField, Symbol, String})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseField, Symbol, Array{AbstractString, 1}})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseField, Symbol, ArgParse.ArgConsumerType})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseField, Symbol, Symbol})
precompile(Tuple{typeof(ArgParse.get_group), AbstractString, ArgParse.ArgParseField, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(ArgParse.is_cmd), ArgParse.ArgParseField})
precompile(Tuple{typeof(Base.getproperty), ArgParse.ArgParseField, Symbol})
precompile(Tuple{typeof(Base.getproperty), ArgParse.ArgParseGroup, Symbol})
precompile(Tuple{typeof(ArgParse.warn_extra_opts), Any, Array{Symbol, 1}})
precompile(Tuple{typeof(ArgParse.check_dest_name), AbstractString})
precompile(Tuple{ArgParse.var"#set_if_valid#28"{Array{Symbol, 1}, ArgParse.ArgParseField}, Any, Any})
precompile(Tuple{typeof(ArgParse.auto_metavar), AbstractString, Bool})
precompile(Tuple{typeof(ArgParse.check_metavar), AbstractString})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseField, Symbol, Type})
precompile(Tuple{typeof(ArgParse.get_cmd_prog_hint), ArgParse.ArgParseField})
precompile(Tuple{typeof(ArgParse.is_multi_action), Symbol})
precompile(Tuple{typeof(ArgParse.is_multi_nargs), ArgParse.ArgConsumerType})
precompile(Tuple{typeof(Base.:(∉)), Symbol, Tuple{Int64, Symbol, Symbol}})
precompile(Tuple{typeof(ArgParse.check_default_type), Nothing, Type})
precompile(Tuple{typeof(ArgParse.check_range_default), Nothing, Function})
precompile(Tuple{typeof(Base.getproperty), ArgParse.ArgParseTable, Symbol})
precompile(Tuple{typeof(Base.iterate), Array{ArgParse.ArgParseField, 1}})
precompile(Tuple{typeof(ArgParse.check_arg_makes_sense), ArgParse.ArgParseSettings, ArgParse.ArgParseField})
precompile(Tuple{typeof(ArgParse.is_arg), ArgParse.ArgParseField})
precompile(Tuple{typeof(ArgParse.check_conflicts_with_commands), ArgParse.ArgParseSettings, ArgParse.ArgParseField, Bool})
precompile(Tuple{typeof(Base.keys), Base.Dict{AbstractString, Any}})
precompile(Tuple{typeof(Base.iterate), Base.KeySet{AbstractString, Base.Dict{AbstractString, Any}}})
precompile(Tuple{typeof(ArgParse.check_for_duplicates), Array{ArgParse.ArgParseField, 1}, ArgParse.ArgParseField})
precompile(Tuple{typeof(Base.push!), Array{ArgParse.ArgParseField, 1}, ArgParse.ArgParseField})
precompile(Tuple{typeof(ArgParse.add_command!), ArgParse.ArgParseSettings, AbstractString, AbstractString, Bool})
precompile(Tuple{typeof(Base.haskey), ArgParse.ArgParseSettings, AbstractString})
precompile(Tuple{typeof(Base.haskey), Base.Dict{AbstractString, Any}, String})
precompile(Tuple{typeof(ArgParse.check_conflicts_with_commands), ArgParse.ArgParseSettings, AbstractString})
precompile(Tuple{typeof(Base.iterate), Array{ArgParse.ArgParseField, 1}, Int64})
precompile(Tuple{Type{ArgParse.ArgParseSettings}})
precompile(Tuple{typeof(Base.source_path)})
precompile(Tuple{typeof(Base.setindex!), ArgParse.ArgParseSettings, ArgParse.ArgParseSettings, AbstractString})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Any}, Any, String})
precompile(Tuple{typeof(Base.getindex), ArgParse.ArgParseSettings, AbstractString})
precompile(Tuple{typeof(Base.getindex), Base.Dict{AbstractString, Any}, String})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseSettings, Symbol, String})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseSettings, Symbol, Bool})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseSettings, Symbol, Base.Set{Char}})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseSettings, Symbol, Function})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseField, Symbol, Bool})
precompile(Tuple{typeof(Base.iterate), Base.KeySet{AbstractString, Base.Dict{AbstractString, Any}}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{AbstractString, 1}})
precompile(Tuple{typeof(Base.iterate), Array{AbstractString, 1}, Int64})
precompile(Tuple{typeof(ArgParse.check_arg_name), AbstractString})
precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, String}, Type{Symbol}, Type{Any}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, String}, Pair{Symbol, DataType}, Pair{Symbol, Bool}}, Int64})
precompile(Tuple{Type{NamedTuple{(:help, :arg_type, :required), T} where T<:Tuple}, Tuple{String, DataType, Bool}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:help, :arg_type, :required), Tuple{String, DataType, Bool}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:help, :arg_type, :required), Tuple{String, DataType, Bool}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:help, :arg_type, :required), Tuple{String, DataType, Bool}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:help, :arg_type, :required), Tuple{String, DataType, Bool}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:help, :arg_type, :required), Tuple{String, DataType, Bool}}}})
precompile(Tuple{typeof(ArgParse.default_action), ArgParse.ArgConsumerType})
precompile(Tuple{typeof(ArgParse.default_action), Symbol})
precompile(Tuple{ArgParse.var"#r#18"{ArgParse.ArgParseSettings}, Any})
precompile(Tuple{typeof(ArgParse.check_long_opt_name), AbstractString, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(Base.in), Char, String})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Int64})
precompile(Tuple{typeof(Base.Unicode.uppercase), String})
precompile(Tuple{typeof(ArgParse.check_short_opt_name), AbstractString, ArgParse.ArgParseSettings})
precompile(Tuple{Type{NamedTuple{(:help,), T} where T<:Tuple}, Tuple{String}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:help,), Tuple{String}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:help,), Tuple{String}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:help,), Tuple{String}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:help,), Tuple{String}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:help,), Tuple{String}}}})
precompile(Tuple{typeof(Base.:(!=)), Symbol, Int64})
precompile(Tuple{typeof(Base.push!), Array{Symbol, 1}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, String}, Pair{Symbol, DataType}, Pair{Symbol, Int64}}, Int64})
precompile(Tuple{Type{NamedTuple{(:default, :help, :arg_type), T} where T<:Tuple}, Tuple{Int64, String, DataType}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:default, :help, :arg_type), Tuple{Int64, String, DataType}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:default, :help, :arg_type), Tuple{Int64, String, DataType}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:default, :help, :arg_type), Tuple{Int64, String, DataType}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type), Tuple{Int64, String, DataType}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type), Tuple{Int64, String, DataType}}}})
precompile(Tuple{typeof(Base.deepcopy), Int64})
precompile(Tuple{typeof(ArgParse.check_default_type), Int64, Type})
precompile(Tuple{typeof(ArgParse.check_range_default), Any, Function})
precompile(Tuple{ArgParse.var"#25#27", Any})
precompile(Tuple{Type{NamedTuple{(:default, :help, :arg_type), T} where T<:Tuple}, Tuple{String, String, DataType}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:default, :help, :arg_type), Tuple{String, String, DataType}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:default, :help, :arg_type), Tuple{String, String, DataType}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:default, :help, :arg_type), Tuple{String, String, DataType}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type), Tuple{String, String, DataType}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type), Tuple{String, String, DataType}}}})
precompile(Tuple{Type{Pair{Symbol, Any}}, Symbol, Type{String}})
precompile(Tuple{typeof(Base.deepcopy), String})
precompile(Tuple{typeof(ArgParse.check_default_type), String, Type})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, String}, Pair{Symbol, DataType}, Pair{Symbol, UInt64}}, Int64})
precompile(Tuple{Type{NamedTuple{(:default, :help, :arg_type), T} where T<:Tuple}, Tuple{UInt64, String, DataType}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:default, :help, :arg_type), Tuple{UInt64, String, DataType}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:default, :help, :arg_type), Tuple{UInt64, String, DataType}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:default, :help, :arg_type), Tuple{UInt64, String, DataType}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type), Tuple{UInt64, String, DataType}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type), Tuple{UInt64, String, DataType}}}})
precompile(Tuple{typeof(Base.deepcopy), UInt64})
precompile(Tuple{typeof(ArgParse.check_default_type), UInt64, Type})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, String}, Pair{Symbol, DataType}, Pair{Symbol, ARTEMIS.var"#245#246"}, Pair{Symbol, String}}, Int64})
precompile(Tuple{Type{NamedTuple{(:default, :help, :arg_type, :range_tester), T} where T<:Tuple}, Tuple{String, String, DataType, ARTEMIS.var"#245#246"}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:default, :help, :arg_type, :range_tester), Tuple{String, String, DataType, ARTEMIS.var"#245#246"}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:default, :help, :arg_type, :range_tester), Tuple{String, String, DataType, ARTEMIS.var"#245#246"}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:default, :help, :arg_type, :range_tester), Tuple{String, String, DataType, ARTEMIS.var"#245#246"}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type, :range_tester), Tuple{String, String, DataType, ARTEMIS.var"#245#246"}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type, :range_tester), Tuple{String, String, DataType, ARTEMIS.var"#245#246"}}}})
precompile(Tuple{ARTEMIS.var"#245#246", String})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, String}, Pair{Symbol, DataType}, Pair{Symbol, Int64}, Pair{Symbol, Bool}}, Int64})
precompile(Tuple{Type{NamedTuple{(:default, :help, :arg_type, :required), T} where T<:Tuple}, Tuple{Int64, String, DataType, Bool}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:default, :help, :arg_type, :required), Tuple{Int64, String, DataType, Bool}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:default, :help, :arg_type, :required), Tuple{Int64, String, DataType, Bool}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:default, :help, :arg_type, :required), Tuple{Int64, String, DataType, Bool}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type, :required), Tuple{Int64, String, DataType, Bool}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:default, :help, :arg_type, :required), Tuple{Int64, String, DataType, Bool}}}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, Any}, Tuple{Pair{Symbol, String}, Pair{Symbol, DataType}, Pair{Symbol, Char}, Pair{Symbol, Bool}}, Int64})
precompile(Tuple{Type{NamedTuple{(:nargs, :help, :arg_type, :required), T} where T<:Tuple}, Tuple{Char, String, DataType, Bool}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, NamedTuple{(:nargs, :help, :arg_type, :required), Tuple{Char, String, DataType, Bool}}})
precompile(Tuple{typeof(Base.isempty), NamedTuple{(:nargs, :help, :arg_type, :required), Tuple{Char, String, DataType, Bool}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:nargs, :help, :arg_type, :required), Tuple{Char, String, DataType, Bool}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:nargs, :help, :arg_type, :required), Tuple{Char, String, DataType, Bool}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:nargs, :help, :arg_type, :required), Tuple{Char, String, DataType, Bool}}}})
precompile(Tuple{typeof(ArgParse.default_action), Char})
precompile(Tuple{Type{ArgParse.ArgConsumerType}, Char})
precompile(Tuple{Type{Symbol}, Char, Vararg{Any}})
precompile(Tuple{typeof(ArgParse.check_default_type_multi_nargs), Nothing, Type})
precompile(Tuple{typeof(ArgParse.check_range_default_multi), Nothing, Function})
precompile(Tuple{Type{Array{Int64, N} where N}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ArgParseField, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(ArgParse.parse_args), Array{T, 1} where T, ArgParse.ArgParseSettings})
precompile(Tuple{ArgParse.var"##parse_args#61", Bool, typeof(ArgParse.parse_args), Array{T, 1} where T, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(ArgParse.parse_args_unhandled), Array{T, 1} where T, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(ArgParse.parse_args_unhandled), Array{T, 1} where T, ArgParse.ArgParseSettings, Bool})
precompile(Tuple{typeof(Base.all), Function, Array{String, 1}})
precompile(Tuple{typeof(Base._all), ArgParse.var"#68#70", Array{String, 1}, Base.Colon})
precompile(Tuple{ArgParse.var"#68#70", Any})
precompile(Tuple{typeof(Base.isempty), Base.Set{Char}})
precompile(Tuple{Type{NamedTuple{(:action, :help, :group), T} where T<:Tuple}, Tuple{Symbol, String, String}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:action, :help, :group), Tuple{Symbol, String, String}}})
precompile(Tuple{typeof(Base.keys), Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:action, :help, :group), Tuple{Symbol, String, String}}}})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:action, :help, :group), Tuple{Symbol, String, String}}}})
precompile(Tuple{Type{ArgParse.ParserState}, Array{T, 1} where T, ArgParse.ArgParseSettings, Bool})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, ArgParse.var"#63#65", Array{ArgParse.ArgParseGroup, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ArgParse.var"#62#64", Base.Iterators.Filter{ArgParse.var"#63#65", Array{ArgParse.ArgParseGroup, 1}}})
precompile(Tuple{typeof(Base.one), Type{AbstractString}})
precompile(Tuple{Type{Base.Dict{ArgParse.ArgParseGroup, AbstractString}}, Base.Generator{Base.Iterators.Filter{ArgParse.var"#63#65", Array{ArgParse.ArgParseGroup, 1}}, ArgParse.var"#62#64"}})
precompile(Tuple{ArgParse.var"#63#65", Any})
precompile(Tuple{typeof(Base.deepcopy), Array{String, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{T, 1} where T}, Array{String, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractString}}, Nothing})
precompile(Tuple{Type{Base.Set{AbstractString}}})
precompile(Tuple{typeof(Base.convert), Type{Base.Set{AbstractString}}, Base.Set{AbstractString}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{ArgParse.ArgParseGroup, AbstractString}}, Base.Dict{ArgParse.ArgParseGroup, AbstractString}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{String, Any}}, Base.Dict{String, Any}})
precompile(Tuple{Type{NamedTuple{(:taskref, :spawn), T} where T<:Tuple}, Tuple{Nothing, Bool}})
precompile(Tuple{Type{Base.Channel{T} where T}, Function})
precompile(Tuple{Base.var"##_#590", Nothing, Bool, Type{Base.Channel{Any}}, ArgParse.var"#69#71"{ArgParse.ArgParseSettings, ArgParse.ParserState}, Int64})
precompile(Tuple{Base.var"#591#592"{ArgParse.var"#69#71"{ArgParse.ArgParseSettings, ArgParse.ParserState}, Base.Channel{Any}}})
precompile(Tuple{ArgParse.var"#69#71"{ArgParse.ArgParseSettings, ArgParse.ParserState}, Any})
precompile(Tuple{typeof(ArgParse.preparse!), Base.Channel{T} where T, ArgParse.ParserState, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(Base.getproperty), ArgParse.ParserState, Symbol})
precompile(Tuple{typeof(ArgParse.looks_like_an_option), AbstractString, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ParserState, Symbol, Nothing})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Symbol})
precompile(Tuple{typeof(Base.iterate), Base.Channel{Any}})
precompile(Tuple{typeof(ArgParse.parse_arg!), ArgParse.ParserState, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(Base.length), Array{ArgParse.ArgParseField, 1}})
precompile(Tuple{typeof(Base.getindex), Array{ArgParse.ArgParseField, 1}, Int64})
precompile(Tuple{typeof(Base.convert), Type{ArgParse.ArgParseField}, ArgParse.ArgParseField})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ParserState, Symbol, Int64})
precompile(Tuple{typeof(ArgParse.parse1_optarg!), ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Any, AbstractString})
precompile(Tuple{typeof(ArgParse.test_exclusive_groups!), Base.Dict{ArgParse.ArgParseGroup, AbstractString}, ArgParse.ArgParseSettings, ArgParse.ArgParseField, AbstractString})
precompile(Tuple{typeof(Base.iterate), Array{ArgParse.ArgParseGroup, 1}})
precompile(Tuple{typeof(Base.haskey), Base.Dict{ArgParse.ArgParseGroup, AbstractString}, ArgParse.ArgParseGroup})
precompile(Tuple{typeof(Base.popfirst!), Array{String, 1}})
precompile(Tuple{typeof(ArgParse.parse_item_wrapper), Type{AbstractString}, AbstractString})
precompile(Tuple{typeof(ArgParse.parse_item), Type{AbstractString}, AbstractString})
precompile(Tuple{typeof(ArgParse.test_range), Function, Any, AbstractString})
precompile(Tuple{ArgParse.var"#3#4", Any})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ParserState, Symbol, Bool})
precompile(Tuple{typeof(Base.setproperty!), ArgParse.ParserState, Symbol, String})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractString}}, String})
precompile(Tuple{typeof(ArgParse.idstring), ArgParse.ArgParseField})
precompile(Tuple{typeof(Base.push!), Base.Set{AbstractString}, String})
precompile(Tuple{typeof(ArgParse.found_command), ArgParse.ParserState})
precompile(Tuple{typeof(ArgParse.test_required_args), ArgParse.ArgParseSettings, Base.Set{AbstractString}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, ArgParse.var"#37#41", Array{ArgParse.ArgParseGroup, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ArgParse.var"#36#40", Base.Iterators.Filter{ArgParse.var"#37#41", Array{ArgParse.ArgParseGroup, 1}}})
precompile(Tuple{Type{Base.Dict{ArgParse.ArgParseGroup, Bool}}, Base.Generator{Base.Iterators.Filter{ArgParse.var"#37#41", Array{ArgParse.ArgParseGroup, 1}}, ArgParse.var"#36#40"}})
precompile(Tuple{ArgParse.var"#37#41", Any})
precompile(Tuple{typeof(Base.in), String, Base.Set{AbstractString}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ArgParse.ArgParseGroup, Bool}, Bool, ArgParse.ArgParseGroup})
precompile(Tuple{typeof(Base.iterate), Base.Dict{ArgParse.ArgParseGroup, Bool}})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ArgParse.ArgParseGroup, Bool}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ArgParse.ArgParseGroup, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Dict{ArgParse.ArgParseGroup, Bool}, Int64})
precompile(Tuple{typeof(ArgParse.parse_command_args!), ArgParse.ParserState, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(Base.deepcopy), Bool})
precompile(Tuple{typeof(Base.findfirst), Function, String})
precompile(Tuple{typeof(ArgParse.parse_long_opt!), ArgParse.ParserState, ArgParse.ArgParseSettings})
precompile(Tuple{typeof(ArgParse.is_flag), ArgParse.ArgParseField})
precompile(Tuple{typeof(Base.iterate), Array{ArgParse.ArgParseGroup, 1}, Int64})
precompile(Tuple{typeof(ArgParse.parse_item_wrapper), Type{String}, AbstractString})
precompile(Tuple{typeof(ArgParse.parse_item), Type{String}, AbstractString})
precompile(Tuple{typeof(ArgParse.parse_item_wrapper), Type{Int64}, AbstractString})
precompile(Tuple{typeof(ArgParse.parse_item), Type{Int64}, AbstractString})
precompile(Tuple{Base.var"#595#596"{Base.Channel{Any}, Task}})
precompile(Tuple{typeof(ArgParse.has_cmd), ArgParse.ArgParseSettings})
precompile(Tuple{typeof(Base.any), Function, Array{ArgParse.ArgParseField, 1}})
precompile(Tuple{typeof(Base._any), typeof(ArgParse.is_cmd), Array{ArgParse.ArgParseField, 1}, Base.Colon})
precompile(Tuple{typeof(Base.pop!), Array{ArgParse.ArgParseField, 1}})
precompile(Tuple{typeof(Base.string), String, String, String, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{typeof(Base.isdelimited), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Bool})
precompile(Tuple{typeof(Base.isdelimited), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Nothing})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Nothing})
precompile(Tuple{typeof(Base.isdelimited), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int64})
precompile(Tuple{typeof(Base.isdelimited), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, UInt64})
precompile(Tuple{Type{NamedTuple{(:storage_path, :seed, :max_iterations, :max_count, :precision), T} where T<:Tuple}, Tuple{String, UInt64, Int64, Int64, DataType}})
precompile(Tuple{ARTEMIS.var"#build_hashDB##kw", NamedTuple{(:storage_path, :seed, :max_iterations, :max_count, :precision), Tuple{String, UInt64, Int64, Int64, DataType}}, typeof(ARTEMIS.build_hashDB), String, String, ARTEMIS.Motif})
precompile(Tuple{Type{ARTEMIS.GenomeInfo}, Dates.DateTime, String, UInt32, Array{String, 1}, DataType, DataType, Bool})
precompile(Tuple{typeof(Base.size), Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.size), Int64, Int64})
precompile(Tuple{typeof(Base.fill), Int64, Int64})
precompile(Tuple{typeof(LinearAlgebra.promote_to_arrays), Array{Int64, 1}, Int64, Type{Array{T, 2} where T}, Base.UnitRange{Int64}, Int64})
precompile(Tuple{Base.var"#cat##kw", NamedTuple{(:dims,), Tuple{Base.Val{1}}}, typeof(Base.cat), Base.UnitRange{Int64}, Vararg{Any}})
precompile(Tuple{Base.var"##cat#155", Base.Val{1}, typeof(Base.cat), Base.UnitRange{Int64}, Vararg{Any}})
precompile(Tuple{typeof(Base._cat), Base.Val{1}, Base.UnitRange{Int64}, Vararg{Any}})
precompile(Tuple{typeof(Base._cat_t), Base.Val{1}, Type{Int64}, Base.UnitRange{Int64}, Vararg{Any}})
precompile(Tuple{typeof(Base.cat_size_shape), Tuple{Bool}, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.cat_similar), Base.UnitRange{Int64}, Type, Tuple{Int64}})
precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Int64}, Tuple{Int64}})
precompile(Tuple{typeof(Base.__cat), Array{Int64, 1}, Tuple{Int64}, Tuple{Bool}, Base.UnitRange{Int64}, Vararg{Any}})
precompile(Tuple{typeof(Base.__cat_offset!), Array{Int64, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.isequal), Tuple{Int64, Int64}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.hashindex), Tuple{Int64, Int64}, Int64})
precompile(Tuple{Type{PathDistribution.PathEnum}, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.eachindex), Base.IndexLinear, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._similar_for), Array{PathDistribution.PathEnum, 1}, Type{Array{Int64, 1}}, Base.Generator{Array{PathDistribution.PathEnum, 1}, ARTEMIS.var"#32#35"{Array{Int64, 1}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Base.Generator{Array{PathDistribution.PathEnum, 1}, ARTEMIS.var"#32#35"{Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base.map), Function, Array{Array{Int64, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#33#36"{Array{Int64, 1}}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{Int64, 1}, 1}, Base.Generator{Array{Array{Int64, 1}, 1}, ARTEMIS.var"#33#36"{Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#34#37"{Int64}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{Int64, 1}, 1}, Base.Generator{Array{Array{Int64, 1}, 1}, ARTEMIS.var"#34#37"{Int64}}})
precompile(Tuple{typeof(ThreadsX.map), Function, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#57#58"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.reshape), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Int64}})
precompile(Tuple{ThreadsX.Implementations.var"##map#73", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ThreadsX.map), Function, Array{Int64, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Array{Int64, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#64#68"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{ThreadsX.Implementations.var"##map#73", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ThreadsX.map), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{typeof(ARTEMIS.isambig)}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{typeof(ARTEMIS.isambig)}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{Bool, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Bool, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Bool, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.reshape), Array{Bool, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.sum), Array{Bool, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{UInt64}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt64}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt64}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Array{Int64, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.sort!), Array{UInt64, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, UInt8})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, UInt8}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, UInt8}}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{UInt8}})
precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{UInt8}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, UInt8}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt8}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, UInt8}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt8}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, UInt8}}}}})
precompile(Tuple{Type{Array{FastFilter.BinaryFuseFilter{UInt16}, 1}}})
precompile(Tuple{Type{Array{UInt8, 1}}})
precompile(Tuple{Base.Colon, Int64, UInt8})
precompile(Tuple{typeof(ThreadsX.findall), Function, Array{UInt8, 1}})
precompile(Tuple{Type{BangBang.NoBang.SingletonVector{Int64}}, Int64})
precompile(Tuple{typeof(Base.isbits), Any})
precompile(Tuple{typeof(Base.iterate), BangBang.NoBang.SingletonVector{Int64}})
precompile(Tuple{typeof(Base.iterate), BangBang.NoBang.SingletonVector{Int64}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{ThreadsX.Implementations.var"##findall#42", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ThreadsX.findall), ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Base.LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Base.LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Base.LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Base.LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Base.LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{Int64, 1}})
precompile(Tuple{typeof(Base.push!), Array{UInt8, 1}, UInt8})
precompile(Tuple{typeof(Base.getindex), Array{UInt64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.log), Float64})
precompile(Tuple{typeof(Base.:(*)), Float64, Float64})
precompile(Tuple{typeof(Base.:(-)), UInt32, Int64})
precompile(Tuple{typeof(Base.convert), Type{UInt16}, UInt16})
precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex_evalf), Type{UInt32}, Int64})
precompile(Tuple{typeof(Base.:(+)), UInt32, Int64})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:seed, :max_iterations), Tuple{UInt64, Int64}}, Type{FastFilter.BinaryFuseFilter{UInt16}}, Array{UInt64, 1}})
precompile(Tuple{typeof(Base.push!), Array{FastFilter.BinaryFuseFilter{UInt16}, 1}, FastFilter.BinaryFuseFilter{UInt16}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{ARTEMIS.var"#152#153"{Int64}, Array{UInt8, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.unreduced), BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Base.isempty), BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{Base.ExtremaMap{typeof(Base.identity)}, typeof(Base._extrema_rf)}, Type{UInt8}})
precompile(Tuple{Type{UInt8}, UInt8})
precompile(Tuple{typeof(Base.sortperm), Array{UInt8, 1}})
precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{UInt8, 1}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{FastFilter.BinaryFuseFilter{UInt16}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{UInt8, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{UInt64, 1}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{UInt64, 1}, Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{UInt64, 1}, Array{UInt8, 1}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(ARTEMIS.get_count_idx), Array{FastFilter.BinaryFuseFilter{UInt16}, 1}, UInt64, Bool})
precompile(Tuple{typeof(Base.getindex), Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.:(!=)), UInt8, UInt8})
precompile(Tuple{typeof(Base.map), typeof(tuple), Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{UInt64, 1}, Array{UInt8, 1}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.length), Int64})
precompile(Tuple{Type{ARTEMIS.HashDB{T, K} where K<:Union{UInt16, UInt32, UInt8} where T<:Unsigned}, ARTEMIS.DBInfo, ARTEMIS.PathTemplates, Array{FastFilter.BinaryFuseFilter{UInt16}, 1}, Array{UInt8, 1}, Nothing})
precompile(Tuple{typeof(ARTEMIS.save), ARTEMIS.HashDB{UInt8, UInt16}, String})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt32})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{String, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Bool})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{UInt64, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt64})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Base.IdDict{Int64, Array{Array{Int64, 1}, 1}}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{FastFilter.BinaryFuseFilter{UInt16}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{UInt16, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{UInt8, 1}})
precompile(Tuple{Base.var"#round##kw", NamedTuple{(:digits,), Tuple{Int64}}, typeof(Base.round), Float64})
precompile(Tuple{typeof(Base.:(*)), String, String, String, String, String})
precompile(Tuple{typeof(ArgParse.parse1_flag!), ArgParse.ParserState, ArgParse.ArgParseSettings, ArgParse.ArgParseField, Bool, AbstractString})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, DataType})
precompile(Tuple{Type{Array{String, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{String, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt64, 1}})
precompile(Tuple{typeof(Serialization.deserialize_dict), Serialization.Serializer{Base.IOStream}, Type{Base.IdDict{Int64, Array{Array{Int64, 1}, 1}}}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{Array{Int64, 1}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Int64})
precompile(Tuple{Type{Array{FastFilter.BinaryFuseFilter{UInt16}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.length), Array{FastFilter.BinaryFuseFilter{UInt16}, 1}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{FastFilter.BinaryFuseFilter{UInt16}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt16, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{FastFilter.BinaryFuseFilter{UInt16}, 1}, FastFilter.BinaryFuseFilter{UInt16}, Int64})
precompile(Tuple{typeof(ARTEMIS.search_hashDB), ARTEMIS.HashDB{UInt8, UInt16}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Bool})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Int64, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!=)), Tuple{Int64, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Int64, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}}}})
precompile(Tuple{typeof(Base.any), Base.BitArray{1}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#7#8"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, ARTEMIS.var"#7#8"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Int64, 1}, Vararg{Any}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSymbols.DNA, Int64})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.vcat), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Set{T} where T}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.push!), Array{Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base._cat_t), Base.Val{1}, Type{Base.Threads.Atomic{Bool}}, Array{Base.Threads.Atomic{Bool}, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.cat_size_shape), Tuple{Bool}, Array{Base.Threads.Atomic{Bool}, 1}, Base.Threads.Atomic{Bool}})
precompile(Tuple{typeof(Base.cat_similar), Array{Base.Threads.Atomic{Bool}, 1}, Type{Base.Threads.Atomic{Bool}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.__cat), Array{Base.Threads.Atomic{Bool}, 1}, Tuple{Int64}, Tuple{Bool}, Array{Base.Threads.Atomic{Bool}, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.__cat_offset!), Array{Base.Threads.Atomic{Bool}, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, Array{Base.Threads.Atomic{Bool}, 1}, Base.Threads.Atomic{Bool}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#40#41"{Array{BioSymbols.DNA, 1}, Int64}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.union), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Int64, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base._cat_t), Base.Val{1}, Type{Symbol}, Array{Symbol, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.cat_size_shape), Tuple{Bool}, Array{Symbol, 1}, Symbol})
precompile(Tuple{typeof(Base.cat_similar), Array{Symbol, 1}, Type{Symbol}, Tuple{Int64}})
precompile(Tuple{typeof(Base.__cat), Array{Symbol, 1}, Tuple{Int64}, Tuple{Bool}, Array{Symbol, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.__cat_offset!), Array{Symbol, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, Array{Symbol, 1}, Symbol})
precompile(Tuple{typeof(DataFrames.ordering), DataFrames.DataFrame, Array{Symbol, 1}, Function, Function, Bool, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.push!), Array{Base.Order.Ordering, 1}, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.length), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, DataFrames.DataFrame})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(DataFrames._cycle_permute!), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(DataFrames._cycle_permute!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(DataFrames.make_pair_concrete), Any})
precompile(Tuple{typeof(DataFrames.normalize_selection), DataFrames.Index, Symbol, Bool})
precompile(Tuple{typeof(DataFrames.normalize_selection), DataFrames.Index, Any, Bool})
precompile(Tuple{typeof(Base.getindex), DataFrames.Index, InvertedIndices.InvertedIndex{Symbol}})
precompile(Tuple{typeof(Base.setdiff!), Base.Set{Int64}, Int64})
precompile(Tuple{typeof(Base.vectorfilter), Type, Base.var"#132#133"{typeof(Base.in), typeof(Base.pop!), Base.Set{Int64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.collect), Type{Int64}, Base.Generator{Base.Iterators.Filter{Base.var"#134#135"{Base.var"#132#133"{typeof(Base.in), typeof(Base.pop!), Base.Set{Int64}}}, Base.UnitRange{Int64}}, typeof(Base.identity)}})
precompile(Tuple{typeof(DataFrames.select_transform!), Base.RefValue{Any}, DataFrames.DataFrame, DataFrames.DataFrame, Base.Set{Symbol}, Bool, Base.RefValue{Bool}, Base.BitArray{1}})
precompile(Tuple{Type{Ref{Any}}, Function})
precompile(Tuple{typeof(DataFrames._transformation_helper), DataFrames.DataFrame, Int64, Base.RefValue{Any}})
precompile(Tuple{typeof(Base.identity), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(DataFrames._add_col_check_copy), DataFrames.DataFrame, DataFrames.DataFrame, Int64, Bool, Base.RefValue{Any}, Symbol, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Iterators.only), Int64})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, typeof(Base.:(!)), Int64})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{Int64, 1}, typeof(Base.:(!)), Symbol})
precompile(Tuple{Type{NamedTuple{(:transcode,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:transcode,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(CSV.write), String, DataFrames.DataFrame})
precompile(Tuple{Type{CSV.Options{D, N, DF, M, TF} where TF where M where DF where N where D}, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Bool, Tuple{}, typeof(CSV._identity), Bool})
precompile(Tuple{DataFrames.var"#874#875", Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._array_for), Type{DataType}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{DataType, 1}, Type, Base.Generator{DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.var"#874#875"}, Int64})
precompile(Tuple{DataFrames.var"#874#875", Array{Int64, 1}})
precompile(Tuple{Type{Tables.Schema{names, types} where types where names}, Array{Symbol, 1}, Array{DataType, 1}})
precompile(Tuple{Type{Tables.Schema{(:guide, :D0, :D1), Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}}})
precompile(Tuple{typeof(Base.isvarargtype), Any})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Tables.var"#11#12"{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Iterators.rest), Base.Generator{Base.UnitRange{Int64}, Tables.var"#11#12"{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}}})
precompile(Tuple{typeof(Base._similar_shape), Base.Generator{Base.UnitRange{Int64}, Tables.var"#11#12"{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, Tables.var"#11#12"{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}}})
precompile(Tuple{CSV.var"#write##kw", NamedTuple{(:append, :compress, :header), Tuple{Bool, Bool, Bool}}, typeof(CSV.write), Tables.Schema{(:guide, :D0, :D1), Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, String, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#103#104"{Bool, Bool, Tables.Schema{(:guide, :D0, :D1), Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}, DataFrames.DataFrameRows{DataFrames.DataFrame}, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, Array{UInt8, 1}, Int64, Int64, Tuple{Symbol, Symbol, Symbol}}, Base.IOStream})
precompile(Tuple{typeof(CSV.writenames), Array{UInt8, 1}, Int64, Int64, Base.IOStream, Tuple{Symbol, Symbol, Symbol}, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}})
precompile(Tuple{CSV.var"#110#111"{Array{UInt8, 1}, Base.RefValue{Int64}, Int64, Base.IOStream, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, UInt8, UInt8}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64})
precompile(Tuple{CSV.var"#110#111"{Array{UInt8, 1}, Base.RefValue{Int64}, Int64, Base.IOStream, Int64, CSV.Options{UInt8, UInt8, Nothing, Tuple{}, typeof(CSV._identity)}, UInt8, UInt8}, Int64, Int64, Symbol})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{CSV.File}, String})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{String, 1}, String}}, Array{String, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{String, 1}, String}}, String})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{String, 1}}}, Array{String, 1}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{K, V} where V where K}, Base.Dict{Type, Type}})
precompile(Tuple{typeof(CSV.getbytebuffer), String, Bool})
precompile(Tuple{typeof(CSV.detectheaderdatapos), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Any, Bool, Any, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64, Int64})
precompile(Tuple{typeof(CSV.skipemptyrow), Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(CSV.checkcommentandemptyline), Array{UInt8, 1}, Int64, Int64, Any, Bool})
precompile(Tuple{Type{Parsers.Options}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Array{String, 1}, Array{String, 1}, Nothing, Bool, Bool, Nothing, Bool, Bool, Bool})
precompile(Tuple{typeof(CSV.detectcolumnnames), Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options, Any, Bool, UInt8, UInt8, UInt8, Nothing, Bool})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, CSV.var"#10#13"{Bool}, Array{String, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, CSV.var"#10#13"{Bool}}})
precompile(Tuple{CSV.var"#initialize_columns##kw", NamedTuple{(:validate,), Tuple{Bool}}, typeof(CSV.initialize_columns), Int64, Nothing, Array{Symbol, 1}, Type, Vararg{Any}})
precompile(Tuple{CSV.var"##initialize_columns#22", Bool, typeof(CSV.initialize_columns), Int64, Nothing, Array{Symbol, 1}, Type, Vararg{Any}})
precompile(Tuple{typeof(CSV.initialize_column), Int64, Nothing, Array{Symbol, 1}, Type, Bool, Parsers.Options})
precompile(Tuple{typeof(Base.nonmissingtype), Type{CSV.NeedsTypeDetection}})
precompile(Tuple{typeof(Base.values), Base.Dict{Type, Type}})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{Base.Dict{Type, Type}}})
precompile(Tuple{typeof(CSV.getname), String})
precompile(Tuple{Type{CSV.Context}, Bool, String, Array{Symbol, 1}, Int64, Int64, Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options, Array{CSV.Column, 1}, Tuple{Float64, Int64}, Bool, Type, Base.Dict{Type, Type}, Type{InlineStrings.InlineString}, Int64, Bool, Int64, Array{Int64, 1}, Bool, Bool, Int64, Bool, Nothing, Bool, Nothing})
precompile(Tuple{typeof(CSV.parsefilechunk!), CSV.Context, Int64, Int64, Int64, Int64, Array{CSV.Column, 1}, Type{Tuple{}}})
precompile(Tuple{typeof(Base.max), UInt8, UInt8})
precompile(Tuple{typeof(Base.:(<<)), Int16, Int64})
precompile(Tuple{typeof(Base.:(+)), UInt8, UInt8})
precompile(Tuple{typeof(Base.:(>=)), UInt8, UInt8})
precompile(Tuple{Type{InlineStrings.String31}, WeakRefStrings.PosLenString})
precompile(Tuple{typeof(SentinelArrays.defaultvalue), Type})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String31, 1, S, V, A} where A<:AbstractArray{InlineStrings.String31, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(SentinelArrays._defaultsentinel), Type})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String31}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String31, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String31, 1}, InlineStrings.String31, Base.Missing})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{InlineStrings.String31, 1, InlineStrings.String31, Base.Missing, Array{InlineStrings.String31, 1}}, InlineStrings.String31, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String31, 1, InlineStrings.String31, Base.Missing, Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String31, 1, InlineStrings.String31, Base.Missing, Array{InlineStrings.String31, 1}}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{Int64, 1, S, V, A} where A<:AbstractArray{Int64, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{Int64}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{Int64, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{Int64, 1}, Int64, Base.Missing})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String31, 1, InlineStrings.String31, Base.Missing, Array{InlineStrings.String31, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Int64})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String31}, Nothing, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{InlineStrings.String31, 1, InlineStrings.String31, Base.Missing, Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{InlineStrings.String31, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, Array{InlineStrings.String31, 1}})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, Array{Int64, 1}})
precompile(Tuple{typeof(CSV.finaltype), Type})
precompile(Tuple{Type{DataFrames.DataFrame}, CSV.File})
precompile(Tuple{typeof(Base.length), Array{InlineStrings.String31, 1}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{InlineStrings.String31, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{InlineStrings.String31, 1}, Int64})
precompile(Tuple{typeof(Base.firstindex), Array{InlineStrings.String31, 1}})
precompile(Tuple{typeof(Base.getproperty), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{String}, Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{InlineStrings.String31, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{InlineStrings.String31, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{InlineStrings.String31, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}}}})
precompile(Tuple{typeof(Base.all), Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.Colon, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:init,), Tuple{Core.TypeofBottom}}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:init,), Tuple{Core.TypeofBottom}}, Symbol})
precompile(Tuple{Type{Base.BottomRF{typeof(Base.promote_type)}}, Function})
precompile(Tuple{typeof(Base.convert), Type{Base.Fix1{Type{Base.MappingRF{F, T} where T where F}, DataFrames.var"#124#125"}}, Base.Fix1{Type{Base.MappingRF{F, T} where T where F}, DataFrames.var"#124#125"}})
precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{DataFrames.var"#124#125", Base.BottomRF{typeof(Base.promote_type)}}, Type{AbstractArray{var"#s81", 1} where var"#s81"}})
precompile(Tuple{Type{Array{T, 2} where T}, DataFrames.DataFrame})
precompile(Tuple{typeof(Base._foldl_impl), Base.MappingRF{DataFrames.var"#124#125", Base.BottomRF{typeof(Base.promote_type)}}, Type, DataFrames.DataFrameColumns{DataFrames.DataFrame}})
precompile(Tuple{DataFrames.var"#124#125", Array{Int64, 1}})
precompile(Tuple{Base.BottomRF{typeof(Base.promote_type)}, Type, Type})
precompile(Tuple{Type{Array{Int64, 2}}, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.copyto!), Array{Int64, 2}, Int64, Array{Int64, 1}})
precompile(Tuple{typeof(Base.:(==)), Array{Int64, 2}, Array{Int64, 2}})
precompile(Tuple{typeof(Base.all), Bool})
precompile(Tuple{typeof(Base.string), Expr})
precompile(Tuple{typeof(Base.show_call), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Symbol, Symbol, Array{Any, 1}, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr})
precompile(Tuple{typeof(BioSequences.remove_newlines), String})
precompile(Tuple{Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, String})
precompile(Tuple{Type{NamedTuple{(:distance, :ambig_max), T} where T<:Tuple}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:distance, :ambig_max), Tuple{Int64, Int64}}, Symbol})
precompile(Tuple{Type{Pair{A, B} where B where A}, Function, Function})
precompile(Tuple{Type{NamedTuple{(:view,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Type{NamedTuple{(:keep,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:keep,), Tuple{Symbol}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:style,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Type{NamedTuple{(:style,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{AbstractArray{T, 1} where T, 1}}})
precompile(Tuple{Type{NamedTuple{(:distance,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:distance,), Tuple{Int64}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:precision,), T} where T<:Tuple}, Tuple{DataType}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:precision,), Tuple{DataType}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:inspect_prefix,), T} where T<:Tuple}, Tuple{String}})
precompile(Tuple{Type{NamedTuple{(:inspect_prefix,), Tuple{String}}}, Tuple{String}})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{String, 1}, Array{String, 1}}}, Int64})
precompile(Tuple{Type{NamedTuple{(:storagepath, :mismatch_only), T} where T<:Tuple}, Tuple{String, Bool}})
precompile(Tuple{Type{NamedTuple{(:storagepath, :mismatch_only), Tuple{String, Bool}}}, Tuple{String, Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:storagepath, :mismatch_only), Tuple{String, Bool}}, Symbol})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:by,), Tuple{ARTEMIS.var"#52#55"}}, Symbol})
precompile(Tuple{Type{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}}, Function, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.:(!=)), Tuple{Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(ConstructionBase.tuple_or_ntuple), Tuple{Symbol, Symbol, Symbol}, Tuple{Base.Sort.MergeSortAlg, Nothing, Nothing}})
precompile(Tuple{Type{NamedTuple{(:smallsort, :smallsize, :basesize), T} where T<:Tuple}, Tuple{Base.Sort.MergeSortAlg, Nothing, Nothing}})
precompile(Tuple{ConstructionBase.var"##s26#1", Any, Any, Any})
precompile(Tuple{typeof(Base.nameof), DataType})
precompile(Tuple{typeof(Base._nt_names), Type{NamedTuple{(:smallsize,), Tuple{Int64}}}})
precompile(Tuple{Type{NamedTuple{(:less_or_equal,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:less_or_equal,), Tuple{Bool}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:outer,), T} where T<:Tuple}, Tuple{Tuple{Int64}}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:outer,), Tuple{Tuple{Int64}}}, Symbol})
precompile(Tuple{typeof(Base._RepeatInnerOuter.to_tuple), Tuple{Int64}})
precompile(Tuple{typeof(Base.fill_to_length), Tuple{Int64}, Int64, Base.Val{1}})
precompile(Tuple{Mmap.var"#3#5"{Ptr{Nothing}, Int64}, Array{UInt8, 1}})
precompile(Tuple{typeof(VariantCallFormat._readheader!), VariantCallFormat.Reader, BioCore.Ragel.State{BufferedStreams.BufferedInputStream{Base.IOStream}}})
precompile(Tuple{typeof(VariantCallFormat._read!), VariantCallFormat.Reader, BioCore.Ragel.State{BufferedStreams.BufferedInputStream{Base.IOStream}}, VariantCallFormat.Record})
precompile(Tuple{typeof(Base.similar), Array{Array{Base.UnitRange{Int64}, 1}, 1}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Base.UnitRange{Int64}, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{BioSymbols.DNA, 1}})
precompile(Tuple{typeof(Base.close), BufferedStreams.BufferedInputStream{Base.IOStream}})
precompile(Tuple{typeof(Base.Iterators.product), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Vararg{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.length), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.:(*)), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.push!), Array{Base.UnitRange{Int64}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(ARTEMIS.removepam), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#160#163"{Base.UnitRange{Int64}}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Base.UnitRange{Int64}, 1}, Base.Generator{Array{Base.UnitRange{Int64}, 1}, ARTEMIS.var"#160#163"{Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Array{String, 1}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Array{String, 1}, 1}, String})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.join), Tuple{Array{Array{String, 1}, 1}, Base.RefValue{String}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.join), Tuple{Array{Array{String, 1}, 1}, Base.RefValue{String}}}})
precompile(Tuple{typeof(Base.join), Array{String, 1}, String})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Tuple{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}, Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Base.UnitRange{Int64}, 1}, Base.Generator{Array{Base.UnitRange{Int64}, 1}, ARTEMIS.var"#60#62"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, ARTEMIS.var"#63#67"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}})
precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.vcat), Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Vararg{Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, Type{Tuple{21, 36}}})
precompile(Tuple{Type{StaticArraysCore.Size{(21, 36)}}})
precompile(Tuple{typeof(Base.prod), Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.prod), StaticArraysCore.Size{(21, 36)}})
precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{21, 36}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{21, 36}, T, 2, L} where L where T}})
precompile(Tuple{Type{Tuple}, StaticArraysCore.Size{(21, 36)}})
precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{21, 36}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{21, 36}}})
precompile(Tuple{typeof(Base.length), Core.SimpleVector})
precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{21, 36}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArrays._Length), Int64, Vararg{Int64}})
precompile(Tuple{Type{StaticArrays.Length{756}}})
precompile(Tuple{StaticArrays.var"##s25#76", Any, Any, Any, Any})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, StaticArrays.var"#77#78", Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#77#78"}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, StaticArrays.var"#77#78"}, Int64})
precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{21, 36}}})
precompile(Tuple{typeof(Base.argtail), Function, Function, Vararg{Function}})
precompile(Tuple{StaticArraysCore.var"##s4#1", Any, Any, Any, Any, Any, Type, Type, Type, Any})
precompile(Tuple{typeof(Base.all), Function, Core.SimpleVector})
precompile(Tuple{typeof(Base._all), StaticArraysCore.var"#2#3", Core.SimpleVector, Base.Colon})
precompile(Tuple{typeof(StaticArraysCore.tuple_minimum), Type{Tuple{21, 36}}})
precompile(Tuple{typeof(Base.minimum), Tuple{Int64, Int64}})
precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{21, 36}, T, 2, L} where L where T}, Array{BioSymbols.DNA, 1}})
precompile(Tuple{Type{ARTEMIS.AmbigIdx}, StaticArraysCore.SArray{Tuple{21, 36}, BioSymbols.DNA, 2, 756}, Array{String, 1}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, StaticArraysCore.SArray{Tuple{21, 36}, BioSymbols.DNA, 2, 756}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.Size{(21, 36)}, Int64})
precompile(Tuple{typeof(Base.trues), Int64})
precompile(Tuple{typeof(StaticArrays._axes), StaticArraysCore.Size{(21, 36)}})
precompile(Tuple{typeof(Base.argtail), StaticArrays.SOneTo{36}})
precompile(Tuple{StaticArrays.var"##s25#113", Any, Any, Any, Any, Any})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.SArray{Tuple{21, 36}, BioSymbols.DNA, 2, 756}, Int64, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{BioSymbols.DNA, 1}, BioSymbols.DNA})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(BioSymbols.iscompatible), Tuple{Array{BioSymbols.DNA, 1}, Tuple{BioSymbols.DNA}}})
precompile(Tuple{Type{Base.OneTo{Int64}}, Base.OneTo{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(BioSymbols.iscompatible), Tuple{Array{BioSymbols.DNA, 1}, Tuple{BioSymbols.DNA}}}})
precompile(Tuple{typeof(Base.setindex!), Base.BitArray{1}, Base.BitArray{1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.sum), Base.BitArray{1}})
precompile(Tuple{Base.BottomRF{Base.Broadcast.BroadcastFunction{typeof(Base.:(|))}}, Base.BitArray{1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{InlineStrings.String31, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{InlineStrings.String31, 1}}}})
precompile(Tuple{typeof(Base.setproperty!), DataFrames.DataFrame, Symbol, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.any), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Colon})
precompile(Tuple{typeof(Base._any), DataFrames.var"#646#647", Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Colon})
precompile(Tuple{typeof(Base.eachcol), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.collect), DataFrames.DataFrameColumns{DataFrames.DataFrame}})
precompile(Tuple{Type{Base.IndexStyle}, Array{AbstractArray{T, 1} where T, 1}, Array{AbstractArray{T, 1} where T, 1}})
precompile(Tuple{typeof(Base.eachindex), Base.IndexLinear, Array{AbstractArray{T, 1} where T, 1}, Array{AbstractArray{T, 1} where T, 1}})
precompile(Tuple{typeof(Base.getindex), Array{AbstractArray{T, 1} where T, 1}, Int64})
precompile(Tuple{typeof(DataAPI.refarray), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(DataAPI.refpool), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(DataAPI.invrefpool), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Nothing, Nothing})
precompile(Tuple{typeof(Base.Iterators.zip), Array{AbstractArray{T, 1} where T, 1}, Array{AbstractArray{T, 1} where T, 1}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{AbstractArray{T, 1} where T, 1}, Array{AbstractArray{T, 1} where T, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{AbstractArray{T, 1} where T, 1}, Array{AbstractArray{T, 1} where T, 1}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.nonmissingtype), Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{AbstractArray{T, 1} where T, 1}, Array{AbstractArray{T, 1} where T, 1}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(DataFrames.prepare_on_col), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.issorted), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(DataFrames._innerjoin_unsorted), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Base.var"#97#98"{typeof(Base.iszero)}, Bool})
precompile(Tuple{typeof(DataFrames._compose_joined_table), DataFrames.DataFrameJoiner, Symbol, Bool, typeof(Base.identity), typeof(Base.identity), Nothing, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Symbol})
precompile(Tuple{DataFrames.var"#select##kw", NamedTuple{(:copycols,), Tuple{Bool}}, typeof(DataFrames.select), DataFrames.DataFrame, Any})
precompile(Tuple{DataFrames.var"#576#577"{DataFrames.DataFrame}, InvertedIndices.InvertedIndex{Array{Symbol, 1}}})
precompile(Tuple{DataFrames.var"#manipulate##kw", NamedTuple{(:copycols, :keeprows, :renamecols), Tuple{Bool, Bool, Bool}}, typeof(DataFrames.manipulate), DataFrames.DataFrame, InvertedIndices.InvertedIndex{Array{Symbol, 1}}})
precompile(Tuple{typeof(DataAPI.ncol), DataFrames.DataFrame})
precompile(Tuple{Type{Array{AbstractArray{T, 1} where T, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Tables.columnindex), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Symbol, 1}, DataFrames.var"#652#655"{DataFrames.DataFrameJoiner}}, Int64})
precompile(Tuple{typeof(Base.setdiff), Base.UnitRange{Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.append!), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.DataFrameColumns{DataFrames.DataFrame}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.DataFrameColumns{DataFrames.DataFrame}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.DataFrameColumns{DataFrames.DataFrame}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(DataAPI.defaultarray), Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Int64})
precompile(Tuple{typeof(DataFrames.similar_outer), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.view), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Array{Int64, 1}}, false}})
precompile(Tuple{typeof(Base.view), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.copyto!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64, Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{DataFrames.DataFrameColumns{DataFrames.DataFrame}, DataFrames.DataFrameColumns{DataFrames.DataFrame}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.iterate), DataFrames.DataFrameColumns{DataFrames.DataFrame}})
precompile(Tuple{typeof(DataFrames._noon_compose_helper!), Array{AbstractArray{T, 1} where T, 1}, typeof(DataFrames.similar_missing), Int64, Array{Int64, 1}, Int64, Array{Int64, 1}, Int64, Base.UnitRange{Int64}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Array{Int64, 1}}, false}})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, Int64}, 1}, Int64, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), DataFrames.DataFrameColumns{DataFrames.DataFrame}, Int64})
precompile(Tuple{typeof(Base.length), Array{AbstractArray{T, 1} where T, 1}})
precompile(Tuple{typeof(DataFrames._names), DataFrames.DataFrame})
precompile(Tuple{typeof(DataFrames._rename_cols), Array{Symbol, 1}, typeof(Base.identity)})
precompile(Tuple{typeof(Base.vcat), Array{Symbol, 1}, Array{Symbol, 1}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:makeunique, :copycols), Tuple{Bool, Bool}}, Type{DataFrames.DataFrame}, Array{AbstractArray{T, 1} where T, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Union{Base.Missing, Int64}, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64})
precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(DataFrames._propagate_join_metadata!), DataFrames.DataFrameJoiner, DataFrames.DataFrame, DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(DataAPI.emptycolmetadata!), DataFrames.DataFrame, Int64})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:style,), Tuple{Bool}}, Symbol})
precompile(Tuple{typeof(DataFrames._merge_matching_table_note_metadata!), DataFrames.DataFrame, Tuple{DataFrames.DataFrame, DataFrames.DataFrame}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.Colon, Symbol})
precompile(Tuple{typeof(Base.copy), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, Base._InitialValue, Array{String, 1}, Base.Colon})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#116#118"{String, Int64, FASTX.FASTA.Reader{TranscodingStreams.TranscodingStream{TranscodingStreams.Noop, Base.IOStream}}, ARTEMIS.DBInfo}, typeof(Base.union), Base.IndexLinear, Array{String, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Base.UnitRange{Int64}, 1, Array{Base.UnitRange{Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#71#74"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Base.UnitRange{Int64}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{UInt32}})
precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{UInt32}}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt32}}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt32}}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, UInt8, Array{UInt32, 1}, Bool})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned}, Tuple{UInt8, Array{UInt32, 1}, Bool}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned}, Tuple{UInt8, Array{UInt32, 1}, Bool}}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#72#75"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{ARTEMIS.Loc{UInt8, UInt32}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Base.isempty), Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{ARTEMIS.PrefixDB, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.reshape), Array{ARTEMIS.PrefixDB, 1}, Tuple{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#77#82", Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.Map{ARTEMIS.var"#77#82"}})
precompile(Tuple{typeof(ThreadsX.collect), Base.Generator{Array{ARTEMIS.PrefixDB, 1}, ARTEMIS.var"#77#82"}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#77#82"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{ARTEMIS.PrefixDB, 1}, ARTEMIS.var"#77#82"}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#78#83", Array{ARTEMIS.PrefixDB, 1}})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.Map{ARTEMIS.var"#78#83"}})
precompile(Tuple{typeof(ThreadsX.collect), Base.Generator{Array{ARTEMIS.PrefixDB, 1}, ARTEMIS.var"#78#83"}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixDB, 1, Array{ARTEMIS.PrefixDB, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#78#83"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{ARTEMIS.PrefixDB, 1}, ARTEMIS.var"#78#83"}})
precompile(Tuple{typeof(Base.unique), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ThreadsX.map), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#79#84"{String, String}})
precompile(Tuple{typeof(Base.iterate), BangBang.NoBang.SingletonVector{Nothing}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.iterate), BangBang.NoBang.SingletonVector{Nothing}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#80#85"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#81#86"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixDB, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixDB, 1}, Int64})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.PrefixDB, Symbol})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#80#85"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#81#86"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixDB, 1}, Int64})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#81#86"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#80#85"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixDB, 1}, Int64})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.vcat), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#80#85"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.vcat), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.findnext), ARTEMIS.var"#80#85"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.vcat), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixDB, 1}, Int64})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UnionAll})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UnionAll})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UnionAll})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.PrefixDB, Symbol})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UnionAll})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.PrefixDB, Symbol})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.vcat), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UnionAll})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixDB, 1}, Int64})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UnionAll})
precompile(Tuple{typeof(Base.vcat), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, UInt8})
precompile(Tuple{typeof(Base.findfirst), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#79#84"{String, String}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{Nothing, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Nothing, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Nothing, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.reshape), Array{Nothing, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.union), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ThreadsX.map), Function, Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Base.setindex!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Base.setindex!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Base.setindex!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.length), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.length), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Loc{UInt8, UInt32}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Loc{UInt8, UInt32}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Loc{UInt8, UInt32}, Int64})
precompile(Tuple{typeof(Base.length), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Loc{UInt8, UInt32}, Int64})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.append!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.append!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Loc{UInt8, UInt32}, Int64})
precompile(Tuple{typeof(Base.length), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Loc{UInt8, UInt32}, Int64})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Base.append!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.append!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{UnionAll}})
precompile(Tuple{typeof(Base.append!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.append!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Loc{UInt8, UInt32}, Int64})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{Type{Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#117#119"{String, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.LinearDB, Symbol})
precompile(Tuple{typeof(Base.collect), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.first), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.DBInfo, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Motif, Symbol})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.reverse), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.reverse), Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.:(<)), Int64})
precompile(Tuple{typeof(Base.convert), Type{ARTEMIS.AlnPath}, ARTEMIS.AlnPath})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#121#123", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#121#123", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#121#123", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#121#123", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#121#123", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#121#123", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#121#123", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Int64})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Int64})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Int64})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{Base.UnitRange{UInt32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixDB, Symbol})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#120#122"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ARTEMIS.suffix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#121#123"}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Int64})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Base.UnitRange{UInt32}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Base.UnitRange{UInt32}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Base.UnitRange{UInt32}, 1}, Int64})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{Base.UnitRange{UInt32}, 1}})
precompile(Tuple{typeof(Base.getproperty), Base.UnitRange{UInt32}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.UnitRange{UInt32}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Base.UnitRange{UInt32}, Symbol})
precompile(Tuple{Base.Colon, UInt32, UInt32})
precompile(Tuple{Base.Colon, UInt32, UInt32})
precompile(Tuple{Base.Colon, UInt32, UInt32})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Base.UnitRange{UInt32}})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Base.UnitRange{UInt32}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Base.UnitRange{UInt32}})
precompile(Tuple{typeof(Base.string), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.string), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Symbol})
precompile(Tuple{typeof(Base.:(*)), String, String, String, String, String, String, Vararg{String}})
precompile(Tuple{typeof(Base.:(*)), String, String, String, String, String, String, Vararg{String}})
precompile(Tuple{typeof(Base.:(*)), String, String, String, String, String, String, Vararg{String}})
precompile(Tuple{typeof(Base.:(*)), String, String, String, String, String, String, Vararg{String}})
precompile(Tuple{typeof(Base.iterate), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.iterate), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.iterate), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.iterate), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(ARTEMIS.decode), ARTEMIS.Loc{UInt8, UInt32}, ARTEMIS.DBInfo})
precompile(Tuple{typeof(ARTEMIS.decode), ARTEMIS.Loc{UInt8, UInt32}, ARTEMIS.DBInfo})
precompile(Tuple{typeof(ARTEMIS.decode), ARTEMIS.Loc{UInt8, UInt32}, ARTEMIS.DBInfo})
precompile(Tuple{typeof(ARTEMIS.decode), ARTEMIS.Loc{UInt8, UInt32}, ARTEMIS.DBInfo})
precompile(Tuple{typeof(Base.write), Base.IOStream, String})
precompile(Tuple{typeof(Base.write), Base.IOStream, String})
precompile(Tuple{typeof(Base.iterate), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Int64})
precompile(Tuple{typeof(Base.write), Base.IOStream, String})
precompile(Tuple{typeof(Base.write), Base.IOStream, String})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#125#126"{Int64, String, String, ARTEMIS.LinearDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}})
precompile(Tuple{Base.var"##open#378", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), ARTEMIS.var"#22#25"{Base.IOStream}, String, Vararg{String}})
precompile(Tuple{Type{InlineStrings.String15}, WeakRefStrings.PosLenString})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String15, 1, S, V, A} where A<:AbstractArray{InlineStrings.String15, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String15}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String15, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String15, 1}, InlineStrings.String15, Base.Missing})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}, InlineStrings.String15, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}})
precompile(Tuple{Type{InlineStrings.String1}, WeakRefStrings.PosLenString})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String1, 1, S, V, A} where A<:AbstractArray{InlineStrings.String1, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String1}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String1, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String1, 1}, InlineStrings.String1, Base.Missing})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{InlineStrings.String1, 1, InlineStrings.String1, Base.Missing, Array{InlineStrings.String1, 1}}, InlineStrings.String1, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String1, 1, InlineStrings.String1, Base.Missing, Array{InlineStrings.String1, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String1, 1, InlineStrings.String1, Base.Missing, Array{InlineStrings.String1, 1}}})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String1, 1, InlineStrings.String1, Base.Missing, Array{InlineStrings.String1, 1}}, Int64})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String15}, Nothing, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String1}, Nothing, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataFrames.row_group_slots!), Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}}, Base.Val{false}, Array{Int64, 1}, Bool, Nothing, Bool})
precompile(Tuple{DataFrames.var"#495#512"{Tuple{Array{UInt32, 1}}, Array{Int64, 1}, Bool, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Base.UnitRange{Int64}, Array{Bool, 1}}})
precompile(Tuple{DataFrames.var"#reduce_or!#516", Array{Array{Bool, 1}, 1}})
precompile(Tuple{typeof(DataFrames.make_pair_concrete), Pair{A, B} where B where A})
precompile(Tuple{Type{Pair{A, B} where B where A}, Function, Type})
precompile(Tuple{typeof(Core.convert), Type{ARTEMIS.var"#16#18"{Int64}}, ARTEMIS.var"#16#18"{Int64}})
precompile(Tuple{Type{Pair{A, B} where B where A}, Symbol, Pair{ARTEMIS.var"#16#18"{Int64}, DataType}})
precompile(Tuple{typeof(DataFrames.normalize_selection), DataFrames.Index, Pair{var"#s62", var"#s61"} where var"#s61"<:(Pair{var"#s56", var"#s55"} where var"#s55"<:Union{AbstractArray{Symbol, 1}, AbstractString, DataType, Function, Symbol, AbstractArray{var"#s54", 1} where var"#s54"<:AbstractString} where var"#s56"<:Union{Function, Type}) where var"#s62", Bool})
precompile(Tuple{typeof(Base.getindex), DataFrames.Index, Symbol})
precompile(Tuple{Type{Pair{A, B} where B where A}, Int64, Pair{ARTEMIS.var"#16#18"{Int64}, DataType}})
precompile(Tuple{DataFrames.var"#747#756"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ARTEMIS.var"#16#18"{Int64}, DataType}}})
precompile(Tuple{DataFrames.var"#748#757"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}}, Pair{Int64, Pair{ARTEMIS.var"#16#18"{Int64}, DataType}}})
precompile(Tuple{DataFrames.var"#749#758"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Bool, Bool, DataFrames.DataFrame, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Base.RefValue{Array{Int64, 1}}, Bool, Pair{Int64, Pair{ARTEMIS.var"#16#18"{Int64}, DataType}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ARTEMIS.var"#16#18"{Int64}, DataType}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Pair{ARTEMIS.var"#16#18"{Int64}, DataType}, Int64, Int64})
precompile(Tuple{Type{Base.Pairs{Symbol, V, I, A} where A where I where V}, NamedTuple{(:alg,), Tuple{SortingAlgorithms.RadixSortAlg}}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:alg,), Tuple{SortingAlgorithms.RadixSortAlg}}, Symbol})
precompile(Tuple{Type{NamedTuple{(:alg,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:alg,), Tuple{Symbol}}, Symbol})
precompile(Tuple{typeof(DataFrames.do_call), ARTEMIS.var"#16#18"{Int64}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Tuple{Array{Int64, 1}}, Int64})
precompile(Tuple{Type{NamedTuple{(:D0, :D1, :D2, :D3), T} where T<:Tuple}, Tuple{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(DataFrames._combine_process_pair_astable), Bool, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}, Base.RefValue{Array{Int64, 1}}, Type{DataFrames.AsTable}, Bool, Base.RefValue{Any}, Base.RefValue{Any}, Base.RefValue{Any}, Bool})
precompile(Tuple{typeof(DataFrames.wrap), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.map), Function, NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.map), typeof(typeof), Tuple{Int64, Int64, Int64}})
precompile(Tuple{Type{NamedTuple{(:D0, :D1, :D2, :D3), T} where T<:Tuple}, Tuple{DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.any), Function, NamedTuple{(:D0, :D1, :D2, :D3), Tuple{DataType, DataType, DataType, DataType}}})
precompile(Tuple{typeof(Base._any), DataFrames.var"#803#806", NamedTuple{(:D0, :D1, :D2, :D3), Tuple{DataType, DataType, DataType, DataType}}, Base.Colon})
precompile(Tuple{typeof(DataFrames._ncol), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.ntuple), DataFrames.var"#804#807"{NamedTuple{(:D0, :D1, :D2, :D3), Tuple{DataType, DataType, DataType, DataType}}, Int64}, Int64})
precompile(Tuple{typeof(DataAPI.defaultarray), Type{Int64}, Int64})
precompile(Tuple{typeof(Base.propertynames), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}})
precompile(Tuple{Type{Ref{Any}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.tail), Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(DataFrames.fill_row!), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Int64, Int64, Tuple{Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{Type{Ref{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}}, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, SortingAlgorithms.RadixSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2, :D3), Tuple{Int64, Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, SortingAlgorithms.RadixSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, SortingAlgorithms.RadixSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, SortingAlgorithms.RadixSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, SortingAlgorithms.RadixSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(Base.collect), Type{Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{DataFrames.var"#741#744"{Bool, Base.Dict{Symbol, Tuple{Bool, Int64}}, Array{DataFrames.TransformationResult, 1}}})
precompile(Tuple{typeof(Base.eachindex), Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.haskey), Base.Dict{Symbol, Tuple{Bool, Int64}}, Symbol})
precompile(Tuple{Type{DataFrames.TransformationResult}, Array{Int64, 1}, Array{Int64, 1}, Symbol, Bool, Int64})
precompile(Tuple{DataFrames.var"#753#762"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Array{DataFrames.TransformationResult, 1}, Int64}})
precompile(Tuple{DataFrames.var"#753#762"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Array{DataFrames.TransformationResult, 1}, Int64}})
precompile(Tuple{typeof(DataFrames.reorder_cols!), Array{DataFrames.TransformationResult, 1}, Int64, Array{Int64, 1}, Array{Int64, 1}, Bool, Array{Int64, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}})
precompile(Tuple{DataFrames.var"#753#762"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Array{DataFrames.TransformationResult, 1}, Int64}})
precompile(Tuple{typeof(DataFrames.reorder_cols!), Array{DataFrames.TransformationResult, 1}, Int64, Array{Int64, 1}, Array{Int64, 1}, Bool, Array{Int64, 1}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}})
precompile(Tuple{DataFrames.var"#753#762"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Array{DataFrames.TransformationResult, 1}, Int64}})
precompile(Tuple{DataFrames.var"#755#764"{Array{AbstractArray{T, 1} where T, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Int64, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Type{AbstractArray{var"#s81", 1} where var"#s81"}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.intersect!), Base.Set{Symbol}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.vectorfilter), Type, Base.var"#132#133"{typeof(Base.in), typeof(Base.pop!), Base.Set{Symbol}}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect), Type{Symbol}, Base.Generator{Base.Iterators.Filter{Base.var"#134#135"{Base.var"#132#133"{typeof(Base.in), typeof(Base.pop!), Base.Set{Symbol}}}, Array{Symbol, 1}}, typeof(Base.identity)}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Array{Symbol, 1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}}}})
precompile(Tuple{typeof(DataFrames._cycle_permute!), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Type{T} where T, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, Int64}}})
precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{UInt32}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, Int64}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt32}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, Int64}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt32}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.min), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{Base.UnitRange{UInt32}, 1}}}, Int64}}}}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{UInt64, 1}, Array{UInt32, 1}})
precompile(Tuple{Type{Base.IdDict{UInt64, UInt32}}, Base.Iterators.Zip{Tuple{Array{UInt64, 1}, Array{UInt32, 1}}}})
precompile(Tuple{Type{ARTEMIS.DictDB}, Base.IdDict{UInt64, UInt32}, ARTEMIS.PathTemplates, ARTEMIS.DBInfo, Nothing})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Tuple{Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}, Tuple{BioSymbols.DNA, Int64}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{Int64}, Tuple{Int64}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.union), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.get), Base.IdDict{UInt64, UInt32}, Any, Any})
precompile(Tuple{typeof(Base.reduce_first), Function, Int64})
precompile(Tuple{Base.BottomRF{typeof(Base.:(+))}, Int64, Int64})
precompile(Tuple{Base.BottomRF{typeof(Base.:(+))}, Int64, UInt32})
precompile(Tuple{typeof(Base.reduce_first), Function, UInt32})
precompile(Tuple{Base.BottomRF{typeof(Base.:(+))}, UInt32, Int64})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Bool, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!)), Tuple{Array{Bool, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!)), Tuple{Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.vcat), Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, Type{Tuple{21, 2}}})
precompile(Tuple{Type{StaticArraysCore.Size{(21, 2)}}})
precompile(Tuple{typeof(Base.prod), StaticArraysCore.Size{(21, 2)}})
precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{21, 2}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{21, 2}, T, 2, L} where L where T}})
precompile(Tuple{Type{Tuple}, StaticArraysCore.Size{(21, 2)}})
precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{21, 2}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{21, 2}}})
precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{21, 2}, T, 2, L} where L where T}})
precompile(Tuple{Type{StaticArrays.Length{42}}})
precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{21, 2}}})
precompile(Tuple{typeof(StaticArraysCore.tuple_minimum), Type{Tuple{21, 2}}})
precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{21, 2}, T, 2, L} where L where T}, Array{BioSymbols.DNA, 1}})
precompile(Tuple{Type{ARTEMIS.AmbigIdx}, StaticArraysCore.SArray{Tuple{21, 2}, BioSymbols.DNA, 2, 42}, Nothing})
precompile(Tuple{Type{ARTEMIS.HashDB{T, K} where K<:Union{UInt16, UInt32, UInt8} where T<:Unsigned}, ARTEMIS.DBInfo, ARTEMIS.PathTemplates, Array{FastFilter.BinaryFuseFilter{UInt16}, 1}, Array{UInt8, 1}, ARTEMIS.AmbigIdx})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, StaticArraysCore.SArray{Tuple{21, 2}, BioSymbols.DNA, 2, 42}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.Size{(21, 2)}, Int64})
precompile(Tuple{typeof(StaticArrays._axes), StaticArraysCore.Size{(21, 2)}})
precompile(Tuple{typeof(Base.argtail), StaticArrays.SOneTo{2}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.SArray{Tuple{21, 2}, BioSymbols.DNA, 2, 42}, Int64, Base.BitArray{1}})
precompile(Tuple{typeof(Base._similar_for), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Type{Base.BitArray{1}}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#155#157"{ARTEMIS.HashDB{UInt8, UInt16}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.BitArray{1}, 1}, Base.BitArray{1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#155#157"{ARTEMIS.HashDB{UInt8, UInt16}}}, Int64})
precompile(Tuple{typeof(Base.reduce), Function, Array{Base.BitArray{1}, 1}})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, Base._InitialValue, Array{Base.BitArray{1}, 1}, Base.Colon})
precompile(Tuple{typeof(Base.reduce_empty), Base.MappingRF{typeof(Base.identity), Base.Broadcast.BroadcastFunction{typeof(Base.:(|))}}, Type{Base.BitArray{1}}})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), Base.Broadcast.BroadcastFunction{typeof(Base.:(|))}, Base.IndexLinear, Array{Base.BitArray{1}, 1}})
precompile(Tuple{typeof(Base._similar_for), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Type{Base.BitArray{1}}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#156#158"{ARTEMIS.HashDB{UInt8, UInt16}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.BitArray{1}, 1}, Base.BitArray{1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#156#158"{ARTEMIS.HashDB{UInt8, UInt16}}}, Int64})
precompile(Tuple{typeof(CSV.findrowstarts!), Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, Any, Base.Dict{Type, Type}, Bool, Int64})
precompile(Tuple{Type{CSV.ColumnProperties}, UInt8})
precompile(Tuple{typeof(Base.convert), Type{Int64}, Int8})
precompile(Tuple{typeof(CSV.isinttypecode), UInt8})
precompile(Tuple{typeof(Base.convert), Type{Int64}, Int16})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{CSV.var"#16#17"{Array{UInt8, 1}, Parsers.Options, Array{Int64, 1}, Int64, Array{CSV.Column, 1}, DataType, Base.Dict{Type, Type}, Bool, Int64, Array{Type, 1}, Base.ReentrantLock, Base.Threads.Atomic{Bool}, Base.Threads.Atomic{Int64}, Base.Threads.Atomic{Int64}, Int64}})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.something), Nothing, Type})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.something), Type, Type})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.get), Base.Dict{Type, Type}, Type, Type})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Type})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.promote_result), Type, Type, Type{InlineStrings.InlineString}, Type{InlineStrings.InlineString}})
precompile(Tuple{typeof(Base.promote_type), Type{InlineStrings.String3}, Type{InlineStrings.InlineString}})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.promote_type), Type{InlineStrings.String31}, Type{InlineStrings.InlineString}})
precompile(Tuple{typeof(Base.lock), CSV.var"#14#15"{Base.Dict{Type, Type}, Int64, Array{CSV.Column, 1}, DataType, Array{CSV.ColumnProperties, 1}}, Base.ReentrantLock})
precompile(Tuple{typeof(Base.promote_type), Type{InlineStrings.String15}, Type{InlineStrings.InlineString}})
precompile(Tuple{typeof(Base.promote_type), Type{InlineStrings.String1}, Type{InlineStrings.InlineString}})
precompile(Tuple{typeof(Base.ceil), Type{Int64}, Float64})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{Type{CSV.Column}, Type, Bool, Bool, Bool, Tuple{Float64, Int64}, Bool})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{Type{CSV.Column}, Type, Bool, Bool, Bool, Tuple{Float64, Int64}, Bool})
precompile(Tuple{Type{CSV.Column}, Type, Bool, Bool, Bool, Tuple{Float64, Int64}, Bool})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{Type{CSV.Column}, Type, Bool, Bool, Bool, Tuple{Float64, Int64}, Bool})
precompile(Tuple{Type{CSV.Column}, Type, Bool, Bool, Bool, Tuple{Float64, Int64}, Bool})
precompile(Tuple{Type{CSV.Column}, Type, Bool, Bool, Bool, Tuple{Float64, Int64}, Bool})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{CSV.var"#30#35"{CSV.Context, Array{Array{CSV.Column, 1}, 1}, Int64, Int64, Array{Int64, 1}, Base.ReentrantLock}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.reinterpret), Type{InlineStrings.String3}, Array{UInt8, 1}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{Type{SentinelArrays.SentinelArray{InlineStrings.String3, 1, S, V, A} where A<:AbstractArray{InlineStrings.String3, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{InlineStrings.String3, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{T, N, S, V, A} where A<:AbstractArray{T, N} where V where S where N where T}, Array{InlineStrings.String3, 1}, InlineStrings.String3, Base.Missing})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(Base.resize!), SentinelArrays.SentinelArray{InlineStrings.String3, 1, InlineStrings.String3, Base.Missing, Array{InlineStrings.String3, 1}}, Int64})
precompile(Tuple{typeof(SentinelArrays.defaultsentinel), Type})
precompile(Tuple{typeof(CSV.isinttype), Type})
precompile(Tuple{typeof(Base.merge_names), Tuple{Vararg{Symbol}}, Tuple{Vararg{Symbol}}})
precompile(Tuple{typeof(Base.pairs), NamedTuple{(:force,), Tuple{Bool}}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{CSV.var"#31#36"{CSV.Context, Int64, Array{Array{CSV.Column, 1}, 1}, Array{Int64, 1}, Int64, Int64, CSV.Column}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, CSV.var"#45#46"{Array{Array{CSV.Column, 1}, 1}, Int64}}})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String3}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String31}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, CSV.var"#45#46"{Array{Array{CSV.Column, 1}, 1}, Int64}}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, CSV.var"#45#46"{Array{Array{CSV.Column, 1}, 1}, Int64}}})
precompile(Tuple{typeof(CSV.makechain!), Type{InlineStrings.String31}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, CSV.var"#45#46"{Array{Array{CSV.Column, 1}, 1}, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, CSV.var"#45#46"{Array{Array{CSV.Column, 1}, 1}, Int64}}})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String1}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{SentinelArrays.var"#newsentinel!##kw", NamedTuple{(:force,), Tuple{Bool}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String15}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{typeof(Base.iterate), Base.Generator{Base.UnitRange{Int64}, CSV.var"#45#46"{Array{Array{CSV.Column, 1}, 1}, Int64}}})
precompile(Tuple{SentinelArrays.var"#newsentinel!##kw", NamedTuple{(:force,), Tuple{Bool}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"#newsentinel!##kw", NamedTuple{(:force,), Tuple{Bool}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"#newsentinel!##kw", NamedTuple{(:force,), Tuple{Bool}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base._array_for), Type{Array{InlineStrings.String31, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{SentinelArrays.var"##newsentinel!#4", Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"##newsentinel!#4", Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.datatype_alignment), DataType})
precompile(Tuple{typeof(SentinelArrays._newsentinel), Type})
precompile(Tuple{SentinelArrays.var"##newsentinel!#4", Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{Type{NamedTuple{(:newsent,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{SentinelArrays.var"##newsentinel!#4", Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"##newsentinel!#4", Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}, typeof(SentinelArrays.newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(:newsent,), Tuple{Int64}}, Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}})
precompile(Tuple{Type{NamedTuple{(:newsent,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{typeof(SentinelArrays._newsentinel), Type})
precompile(Tuple{typeof(CSV.checkpooled!), Type{InlineStrings.String31}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64, Int64, CSV.Context})
precompile(Tuple{Base.var"#invokelatest##kw", NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(:newsent,), Tuple{Int64}}, Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}})
precompile(Tuple{typeof(Base.ndims), Array{Array{InlineStrings.String31, 1}, 1}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(:newsent,), Tuple{Int64}}, Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:force,), Tuple{Bool}}}})
precompile(Tuple{Base.var"#invokelatest##kw", NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{Base.var"##invokelatest#2", Base.Pairs{Symbol, Integer, Tuple{Symbol, Symbol}, NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{InlineStrings.String31, 1}, 1}, Array{InlineStrings.String31, 1}, Base.Generator{Base.UnitRange{Int64}, CSV.var"#50#54"{Array{Array{CSV.Column, 1}, 1}, Int64}}, Int64})
precompile(Tuple{Base.var"##invokelatest#2", Base.Pairs{Symbol, Integer, Tuple{Symbol, Symbol}, NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{Base.var"##invokelatest#2", Base.Pairs{Symbol, Integer, Tuple{Symbol, Symbol}, NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{SentinelArrays.var"#_newsentinel!##kw", NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}, typeof(SentinelArrays._newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"#_newsentinel!##kw", NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}, typeof(SentinelArrays._newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{Type{SentinelArrays.ChainedVector{T, A} where A<:AbstractArray{T, 1} where T}, Array{Array{InlineStrings.String31, 1}, 1}})
precompile(Tuple{Base.var"##invokelatest#2", Base.Pairs{Symbol, Integer, Tuple{Symbol, Symbol}, NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{SentinelArrays.var"#_newsentinel!##kw", NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}, typeof(SentinelArrays._newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"##_newsentinel!#1", Int64, Bool, typeof(SentinelArrays._newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"##_newsentinel!#1", Int64, Bool, typeof(SentinelArrays._newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.ndims), Array{Array{InlineStrings.String31, 1}, 1}})
precompile(Tuple{SentinelArrays.var"##_newsentinel!#1", Int64, Bool, typeof(SentinelArrays._newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{SentinelArrays.var"##_newsentinel!#1", Int64, Bool, typeof(SentinelArrays._newsentinel!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Vararg{SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.length), SentinelArrays.ChainedVector{InlineStrings.String31, Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(CSV.makechain!), Type{Int64}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64})
precompile(Tuple{typeof(CSV.makechain!), Type{Int64}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64})
precompile(Tuple{typeof(CSV.makechain!), Type{Int64}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64})
precompile(Tuple{Base.var"#invokelatest##kw", NamedTuple{(:newsent, :force), Tuple{Int64, Bool}}, typeof(Base.invokelatest), Any, Any, Vararg{Any}})
precompile(Tuple{typeof(CSV.makechain!), Type{Int64}, Array{Array{CSV.Column, 1}, 1}, CSV.Column, Int64, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Array{Int64, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Array{Int64, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Array{Int64, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Array{Int64, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.length), SentinelArrays.ChainedVector{InlineStrings.String31, Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, CSV.var"#50#54"{Array{Array{CSV.Column, 1}, 1}, Int64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, CSV.var"#50#54"{Array{Array{CSV.Column, 1}, 1}, Int64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, CSV.var"#50#54"{Array{Array{CSV.Column, 1}, 1}, Int64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, CSV.var"#50#54"{Array{Array{CSV.Column, 1}, 1}, Int64}}, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Array{Int64, 1}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{Type{SentinelArrays.ChainedVector{T, A} where A<:AbstractArray{T, 1} where T}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{Type{SentinelArrays.ChainedVector{T, A} where A<:AbstractArray{T, 1} where T}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{Type{SentinelArrays.ChainedVector{T, A} where A<:AbstractArray{T, 1} where T}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.length), SentinelArrays.ChainedVector{Int64, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.length), SentinelArrays.ChainedVector{Int64, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.length), SentinelArrays.ChainedVector{Int64, Array{Int64, 1}}})
precompile(Tuple{Type{SentinelArrays.ChainedVector{T, A} where A<:AbstractArray{T, 1} where T}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{Type{SentinelArrays.ChainedVector{T, A} where A<:AbstractArray{T, 1} where T}, Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(DataFrames._preprocess_column), SentinelArrays.ChainedVector{InlineStrings.String31, Array{InlineStrings.String31, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), SentinelArrays.ChainedVector{Int64, Array{Int64, 1}}, Int64, Bool})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Int64, 1}, Int64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(<=)), Tuple{Array{Int64, 1}, Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(<=)), Tuple{Array{Int64, 1}, Int64}}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.BitArray{1}, Base.Colon})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{InlineStrings.String31, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{String}, Tuple{Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Array{InlineStrings.String31, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Main.asguide), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Array{InlineStrings.String31, 1}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Main.asguide), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Array{InlineStrings.String31, 1}}}}}})
precompile(Tuple{typeof(Base.setproperty!), DataFrames.DataFrame, Symbol, Array{String, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{InlineStrings.String31, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.length), Tuple{Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.length), Tuple{Array{InlineStrings.String31, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Main.countspaces), Tuple{Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Main.countspaces), Tuple{Array{InlineStrings.String31, 1}}}})
precompile(Tuple{typeof(Main.ldb_start), Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.setproperty!), DataFrames.DataFrame, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{String, 1}, String})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{String, 1}, Base.RefValue{String}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{String, 1}, Base.RefValue{String}}}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{String, 1}, Int64})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{String, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, String})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{String}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{String}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, InlineStrings.String1})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, InlineStrings.String15})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}}}})
precompile(Tuple{typeof(Base.push!), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String15}}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.RefValue{InlineStrings.String1}}}}}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Any, 1}, Base.Colon})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Any, 1}})
precompile(Tuple{typeof(Base.getindex), Array{InlineStrings.String31, 1}, Array{Any, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Any, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Array{Any, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{Any, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}, Array{Any, 1}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Array{Any, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(>)), Tuple{Array{Int64, 1}, Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(>)), Tuple{Array{Int64, 1}, Int64}}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{InlineStrings.String31, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String3, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Int64, 1}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}}}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#143#144"{String, Int64, FASTX.FASTA.Reader{TranscodingStreams.TranscodingStream{TranscodingStreams.Noop, Base.IOStream}}, ARTEMIS.DBInfo}, typeof(Base.union), Base.IndexLinear, Array{String, 1}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.:(*)), String, String, String, String})
precompile(Tuple{typeof(Base.zeros), Type{UInt32}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{UInt32, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.zeros), Type{UInt8}, Int64})
precompile(Tuple{typeof(Base.ones), Type{UInt32}, Int64})
precompile(Tuple{typeof(ThreadsX.findall), Function, Array{UInt32, 1}})
precompile(Tuple{ThreadsX.Implementations.var"##findall#42", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ThreadsX.findall), Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Base.LinearIndices{1, Tuple{Base.OneTo{Int64}}}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Int64, 1}})
precompile(Tuple{typeof(ThreadsX.map), Function, Array{Int64, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}}, Array{Int64, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, UInt32})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, UInt32})
precompile(Tuple{typeof(ARTEMIS.levenshtein), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(ARTEMIS.levenshtein), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Int64, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.reshape), Array{Int64, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.pop!), Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.dotview), Array{UInt32, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.materialize!), Base.SubArray{UInt32, 1, Array{UInt32, 1}, Tuple{Array{Int64, 1}}, false}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.identity), Tuple{Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, ARTEMIS.var"#139#141"{Array{UInt32, 1}, Int64, Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Base.UnitRange{UInt32}, 1}, Array{UInt32, 1}})
precompile(Tuple{typeof(ThreadsX.map), Function, Base.UnitRange{Int64}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#140#142"{Array{UInt8, 1}, Array{UInt32, 1}, Array{UInt32, 1}}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#140#142"{Array{UInt8, 1}, Array{UInt32, 1}, Array{UInt32, 1}}}, Base.UnitRange{Int64}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#140#142"{Array{UInt8, 1}, Array{UInt32, 1}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.UnitRange{Int64}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#140#142"{Array{UInt8, 1}, Array{UInt32, 1}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Node, 1}, Array{ARTEMIS.Node, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#140#142"{Array{UInt8, 1}, Array{UInt32, 1}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Node, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{ARTEMIS.Node, 1}})
precompile(Tuple{typeof(Base.isempty), Array{ARTEMIS.Node, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{ARTEMIS.Node, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.reshape), Array{ARTEMIS.Node, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{ARTEMIS.Node, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.UseSIMD{false}, Transducers.Reduction{Transducers.Filter{ThreadsX.Implementations.var"#43#44"{Base.Fix2{typeof(Base.isequal), Int64}, Array{UInt32, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{Int64, 1}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.TreeDB, Symbol})
precompile(Tuple{typeof(Base.println), ARTEMIS.DBInfo})
precompile(Tuple{typeof(Base.println), Base.TTY, ARTEMIS.DBInfo})
precompile(Tuple{typeof(Base.sizeof), ARTEMIS.DBInfo})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, String})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, Dates.DateTime})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.TTY}, Dates.DateTime})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, Any})
precompile(Tuple{typeof(Base.sizeof), ARTEMIS.GenomeInfo})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, UInt32})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, Array{String, 1}})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, Bool})
precompile(Tuple{typeof(Base.sizeof), ARTEMIS.Motif})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Int64})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.TTY}, Char})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, Int64})
precompile(Tuple{typeof(Base.string), Int64})
precompile(Tuple{Type{Array{ARTEMIS.Node, 1}}, UndefInitializer, Tuple{Int64}})
precompile(Tuple{typeof(Base.length), Array{ARTEMIS.Node, 1}})
precompile(Tuple{typeof(Serialization.deserialize_fillarray!), Array{ARTEMIS.Node, 1}, Serialization.Serializer{Base.IOStream}})
precompile(Tuple{typeof(Base.setindex!), Array{ARTEMIS.Node, 1}, ARTEMIS.Node, Int64})
precompile(Tuple{typeof(ARTEMIS.print_treeDB), ARTEMIS.SuffixTreeDB, Int64, Int64, Base.TTY})
precompile(Tuple{typeof(Base.print), Base.TTY, Int64})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Node, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Node, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Node, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Node, Symbol})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Base.push!), Array{UInt32, 1}, UInt32})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.push!), Array{UInt32, 1}, UInt32})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.push!), Array{UInt32, 1}, UInt32})
precompile(Tuple{typeof(Base.:(>)), Int64, UInt8})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Base.:(>)), Int64, UInt8})
precompile(Tuple{typeof(Base.push!), Array{UInt32, 1}, UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.push!), Array{UInt32, 1}, UInt32})
precompile(Tuple{typeof(Base.:(>)), Int64, UInt8})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Node, Symbol})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Base.push!), Array{UInt32, 1}, UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Node, Symbol})
precompile(Tuple{typeof(Base.:(>)), Int64, UInt8})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#145#146"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Base.push!), Array{UInt32, 1}, UInt32})
precompile(Tuple{typeof(Base.getindex), Array{ARTEMIS.Node, 1}, UInt32})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Node, Symbol})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(Base.:(>)), Int64, UInt8})
precompile(Tuple{typeof(Base.:(!=)), UInt32, Int64})
precompile(Tuple{typeof(ARTEMIS.levenshtein2), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.SuffixTreeDB, Symbol})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(ARTEMIS.align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Base.:(>)), Int64, UInt8})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#148#149"{Int64, String, String, ARTEMIS.TreeDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.first), Tuple{Tuple{Tuple{Nothing, Nothing}}}}}, Function, Tuple{Tuple{Tuple{Nothing, Nothing}}}, Nothing})
precompile(Tuple{typeof(Base.axes), Tuple})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.Style{Tuple}, Nothing, typeof(Base.last), Tuple{Tuple{Tuple{Nothing, Nothing}}}}}, Function, Tuple{Tuple{Tuple{Nothing, Nothing}}}, Nothing})
precompile(Tuple{typeof(DataFrames.row_group_slots!), Tuple{Array{InlineStrings.String31, 1}}, Base.Val{false}, Array{Int64, 1}, Bool, Nothing, Bool})
precompile(Tuple{Type{NamedTuple{(:D0, :D1), T} where T<:Tuple}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(DataFrames.wrap), NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.map), Function, NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}})
precompile(Tuple{Type{NamedTuple{(:D0, :D1), T} where T<:Tuple}, Tuple{DataType, DataType}})
precompile(Tuple{typeof(Base.any), Function, NamedTuple{(:D0, :D1), Tuple{DataType, DataType}}})
precompile(Tuple{typeof(Base._any), DataFrames.var"#803#806", NamedTuple{(:D0, :D1), Tuple{DataType, DataType}}, Base.Colon})
precompile(Tuple{typeof(DataFrames._ncol), NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.ntuple), DataFrames.var"#804#807"{NamedTuple{(:D0, :D1), Tuple{DataType, DataType}}, Int64}, Int64})
precompile(Tuple{typeof(Base.propertynames), NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}})
precompile(Tuple{typeof(DataFrames.fill_row!), NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}, Tuple{Array{Int64, 1}, Array{Int64, 1}}, Int64, Int64, Tuple{Symbol, Symbol}})
precompile(Tuple{Type{Ref{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}}, Tuple{Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1), Tuple{Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Type{Symbol}, Tuple{Symbol, Symbol}})
precompile(Tuple{typeof(Base.eachindex), Tuple{Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Type{AbstractArray{var"#s81", 1} where var"#s81"}, Array{InlineStrings.String31, 1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{InlineStrings.String31, 1}}}})
precompile(Tuple{typeof(DataFrames._cycle_permute!), Array{InlineStrings.String31, 1}, Array{Int64, 1}})
precompile(Tuple{Type{NamedTuple{(:D0, :D1, :D2), T} where T<:Tuple}, Tuple{Int64, Int64, Int64}})
precompile(Tuple{typeof(DataFrames.wrap), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.map), Function, NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}})
precompile(Tuple{Type{NamedTuple{(:D0, :D1, :D2), T} where T<:Tuple}, Tuple{DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.any), Function, NamedTuple{(:D0, :D1, :D2), Tuple{DataType, DataType, DataType}}})
precompile(Tuple{typeof(Base._any), DataFrames.var"#803#806", NamedTuple{(:D0, :D1, :D2), Tuple{DataType, DataType, DataType}}, Base.Colon})
precompile(Tuple{typeof(DataFrames._ncol), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.ntuple), DataFrames.var"#804#807"{NamedTuple{(:D0, :D1, :D2), Tuple{DataType, DataType, DataType}}, Int64}, Int64})
precompile(Tuple{typeof(Base.propertynames), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}})
precompile(Tuple{typeof(DataFrames.fill_row!), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Int64, Int64, Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{Type{Ref{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}}, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{typeof(DataFrames.wrap_row), NamedTuple{(:D0, :D1, :D2), Tuple{Int64, Int64, Int64}}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(DataFrames._combine_rows_with_first_task!), Int64, Int64, Int64, Int64, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Array{Bool, 1}, Base.ReentrantLock, ARTEMIS.var"#16#18"{Int64}, DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Array{Int64, 1}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Tuple{Symbol, Symbol, Symbol}, DataFrames.FirstMultiCol})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{DataFrames.var"#814#817"{DataFrames.GroupedDataFrame{DataFrames.DataFrame}, Bool, Tuple{Symbol, Symbol, Symbol}, Tuple{Array{Int64, 1}}, ARTEMIS.var"#16#18"{Int64}, Array{Bool, 1}, Base.RefValue{Tuple{Vararg{AbstractArray{T, 1} where T, var"#s407"}} where var"#s407"}, Base.ReentrantLock, Array{Int64, 1}, Array{Int64, 1}, Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Type{Symbol}, Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.eachindex), Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}}}})
precompile(Tuple{typeof(Base.any), Function, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base.any), Function, Array{Int64, 1}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Int64, 1}, Base.Colon})
precompile(Tuple{typeof(Base.any), Function, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base.any), Function, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base._any), DataFrames.var"#646#647", PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base._any), DataFrames.var"#646#647", Array{Int64, 1}, Base.Colon})
precompile(Tuple{typeof(Base._any), DataFrames.var"#646#647", PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base._any), DataFrames.var"#646#647", PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(DataAPI.refarray), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataAPI.refpool), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataAPI.invrefpool), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{UInt32, 1}, Array{InlineStrings.String31, 1}, Base.Dict{InlineStrings.String31, UInt32}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{UInt32, 1}, Int64})
precompile(Tuple{typeof(DataFrames.map2refs), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Base.Dict{InlineStrings.String31, UInt32}})
precompile(Tuple{typeof(DataAPI.refarray), Array{Int64, 1}})
precompile(Tuple{typeof(DataAPI.refpool), Array{Int64, 1}})
precompile(Tuple{typeof(DataAPI.invrefpool), Array{Int64, 1}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), Array{Int64, 1}, Array{Int64, 1}, Nothing, Nothing})
precompile(Tuple{typeof(DataAPI.refarray), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataAPI.refpool), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataAPI.invrefpool), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Array{UInt32, 1}, Array{InlineStrings.String15, 1}, Base.Dict{InlineStrings.String15, UInt32}})
precompile(Tuple{typeof(DataFrames.map2refs), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.Dict{InlineStrings.String15, UInt32}})
precompile(Tuple{typeof(DataAPI.refarray), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataAPI.refpool), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataAPI.invrefpool), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{UInt32, 1}, Array{InlineStrings.String1, 1}, Base.Dict{InlineStrings.String1, UInt32}})
precompile(Tuple{typeof(DataFrames.map2refs), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Base.Dict{InlineStrings.String1, UInt32}})
precompile(Tuple{typeof(Base.length), Array{UInt32, 1}})
precompile(Tuple{typeof(Base.nonmissingtype), Type{UInt32}})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Int64}})
precompile(Tuple{typeof(DataFrames.prepare_on_col), Array{UInt32, 1}, Array{Int64, 1}, Vararg{AbstractArray{T, 1} where T}})
precompile(Tuple{Type{DataFrames.OnCol{T, N} where N where T}, Array{UInt32, 1}, Vararg{AbstractArray{T, 1} where T}})
precompile(Tuple{typeof(Base.all), Function, Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base._all), DataFrames.var"#682#684", Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base._all), DataFrames.var"#683#685"{Int64}, Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}}, Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), DataFrames.OnCol{Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(Base.falses), Int64})
precompile(Tuple{typeof(Base.isempty), DataFrames.OnCol{Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Integer, 1}}})
precompile(Tuple{typeof(Base.issorted), DataFrames.OnCol{Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(DataFrames._semijoin_unsorted), DataFrames.OnCol{Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, DataFrames.OnCol{Tuple{Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, Base.BitArray{1}, Bool})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.BitArray{1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!)), Tuple{Base.BitArray{1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!)), Tuple{Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.floor), Float64})
precompile(Tuple{Type{Int64}, Float64})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#95#100"{String, Int64, FASTX.FASTA.Reader{TranscodingStreams.TranscodingStream{TranscodingStreams.Noop, Base.IOStream}}, ARTEMIS.DBInfo}, typeof(Base.union), Base.IndexLinear, Array{String, 1}})
precompile(Tuple{Base.Iterators.var"#14#16"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Base.HasEltype, 1}}})
precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Base.Iterators.prod_iteratorsize), Base.HasShape{1}, Base.HasShape{1}, Base.HasShape{1}, Vararg{Any}})
precompile(Tuple{Base.Iterators.var"#18#19"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{DataType, 1}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 3}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}})
precompile(Tuple{typeof(BioSequences.seq_data_len), Type{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}}})
precompile(Tuple{typeof(Base.sort), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{Base.Iterators.var"#1#2"{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.UnitRange{Int64}}}, Int64})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.UnitRange{Int64}}}, Int64})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Iterators.Zip{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.length), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Type{ProgressMeter.Progress}, Int64, Int64, String, Nothing, Symbol, Base.TTY})
precompile(Tuple{Type{ProgressMeter.ProgressWrapper{T} where T}, Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, ProgressMeter.Progress})
precompile(Tuple{typeof(Base.iterate), ProgressMeter.ProgressWrapper{Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#96#101"})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#96#101"}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#96#101"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#96#101"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Base.BitArray{1}, 1}, Array{Base.BitArray{1}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#96#101"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Base.BitArray{1}, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{Base.BitArray{1}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Base.BitArray{1}, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Base.BitArray{1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.reshape), Array{Base.BitArray{1}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.hcat), Base.BitArray{1}, Base.BitArray{1}, Base.BitArray{1}})
precompile(Tuple{ThreadsX.Implementations.var"##map#73", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ThreadsX.map), Function, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#97#102"}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt8, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt8, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt8, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt8, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt8, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt8, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{UInt8, 1}, Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{UInt8, 1}, Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{UInt8, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{UInt8, 1}})
precompile(Tuple{typeof(Base.isempty), Array{UInt8, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{UInt8, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.reshape), Array{UInt8, 1}, Tuple{Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#98#103"}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.next), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, ARTEMIS.Loc{UInt8, UInt32}})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt32, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt32, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt32, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt32, 1}})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt32, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt32, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt32, 1}})
precompile(Tuple{typeof(Transducers.AutoObjectsReStacker.restack), Array{UInt32, 1}})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt32, 1}, Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{UInt32, 1}, Array{UInt32, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{UInt32, 1}, Array{UInt32, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{UInt32, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{UInt32, 1}})
precompile(Tuple{typeof(Base.isempty), Array{UInt32, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{UInt32, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.reshape), Array{UInt32, 1}, Tuple{Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#99#104"}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#99#104"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#99#104"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#99#104"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#99#104"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#99#104"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Bool, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{Type{Base.BitArray{1}}, Array{Bool, 1}})
precompile(Tuple{Type{ARTEMIS.MotifPos}, Array{UInt8, 1}, Array{UInt32, 1}, Base.BitArray{1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.BitArray{1}, Int64, Base.BitArray{2}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{UInt32, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), ProgressMeter.ProgressWrapper{Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Int64})
precompile(Tuple{typeof(Base.hcat), Base.BitArray{1}, Base.BitArray{1}, Base.BitArray{1}, Vararg{Base.BitArray{1}}})
precompile(Tuple{typeof(Base.hcat), Base.BitArray{1}})
precompile(Tuple{typeof(Base.hcat), Base.BitArray{1}, Base.BitArray{1}})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#97#102"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt8, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Int64})
precompile(Tuple{typeof(Transducers._foldl_linear_bulk), Transducers.Reduction{Transducers.NoComplete, Transducers.Reduction{Transducers.Map{ARTEMIS.var"#98#103"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}}, Array{UInt32, 1}, Array{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.iterate), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Int64})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.IOStream}, Type{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifDB, Symbol})
precompile(Tuple{typeof(Base.first), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#112#114"{Int64, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.reshape), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Tuple{Int64}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}})
precompile(Tuple{Base.var"##s885#555", Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr, Vararg{Expr}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#106#109", Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#107#110"{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#106#109"}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#107#110"{Int64}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, UInt8})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{UInt32, 1}, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{UInt32, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{UInt32, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, UInt8})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{UInt32, 1}, Int64})
precompile(Tuple{typeof(Base.string), UInt32})
precompile(Tuple{typeof(Base.string), UInt32})
precompile(Tuple{typeof(Base.string), UInt32})
precompile(Tuple{typeof(Base.string), UInt32})
precompile(Tuple{typeof(Base.getindex), Array{UInt32, 1}, Int64})
precompile(Tuple{typeof(Base.string), UInt32})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.collect_similar), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#105#108"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64}}})
precompile(Tuple{typeof(Base.string), UInt32})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.getindex), Base.BitArray{1}, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.MotifPos, Symbol})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#113#115"{Int64, Int64, String, String, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.MotifDB}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}})
precompile(Tuple{typeof(Base.any), Function, Array{InlineStrings.String31, 1}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{InlineStrings.String31, 1}, Base.Colon})
precompile(Tuple{typeof(Base._any), DataFrames.var"#646#647", Array{InlineStrings.String31, 1}, Base.Colon})
precompile(Tuple{typeof(DataAPI.refarray), Array{InlineStrings.String31, 1}})
precompile(Tuple{typeof(DataAPI.invrefpool), Array{InlineStrings.String31, 1}})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), Array{InlineStrings.String31, 1}, Array{InlineStrings.String31, 1}, Nothing, Nothing})
precompile(Tuple{typeof(DataFrames.prepare_on_col), Array{InlineStrings.String31, 1}, Array{Int64, 1}, Vararg{AbstractArray{T, 1} where T}})
precompile(Tuple{Type{DataFrames.OnCol{T, N} where N where T}, Array{InlineStrings.String31, 1}, Vararg{AbstractArray{T, 1} where T}})
precompile(Tuple{typeof(Base.all), Function, Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base._all), DataFrames.var"#682#684", Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base._all), DataFrames.var"#683#685"{Int64}, Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base.convert), Type{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}}, Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(Base.isempty), DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(Base.issorted), DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(DataFrames._semijoin_unsorted), DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, Base.BitArray{1}, Bool})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Array{UInt32, 1}, Int64, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{4, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt8, 1}})
precompile(Tuple{Type{IntArrays.IntArray{4, T, 1} where T}, Array{UInt8, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices._build!), Type{IndexableBitVectors.SucVector}, IntArrays.IntArray{4, UInt8, 1}, Array{IndexableBitVectors.SucVector, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{4, UInt8, IndexableBitVectors.SucVector}}, Tuple{IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.FMIndex{w, T} where T where w}, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{4, UInt8, IndexableBitVectors.SucVector}, Int64, Array{UInt32, 1}, IndexableBitVectors.SucVector, Array{Int64, 1}})
precompile(Tuple{typeof(ARTEMIS.save), ARTEMIS.FMIndexes.FMIndex{4, UInt32}, String})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Tuple{IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Array{IndexableBitVectors.Block, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.IOStream}, Tuple{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.GenomeInfo, Symbol})
precompile(Tuple{Type{Array{IndexableBitVectors.Block, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.read!), Base.IOStream, Array{IndexableBitVectors.Block, 1}})
precompile(Tuple{Type{Array{UInt32, 1}}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locateall), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.FMIndexes.FMIndex{4, UInt32}})
precompile(Tuple{typeof(Base.append!), Array{UInt32, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{Array{Int64, 1}, Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Array{Int64, 1}, Int64}}})
precompile(Tuple{typeof(Base.sort!), Array{UInt32, 1}})
precompile(Tuple{typeof(Base.sort!), Array{UInt32, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.convert), Type{Array{Int64, 1}}, Array{UInt32, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.:(∘)), Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.IdentityTransducer})
precompile(Tuple{typeof(ThreadsX.collect), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{SplittablesBase.Implementations.DictView{Base.Dict{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Nothing}, typeof(Base.first)}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#51#54"{Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#51#54"{Int64}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#51#54"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#51#54"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#51#54"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#51#54"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#51#54"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Base.isempty), Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{ARTEMIS.Path, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.reshape), Array{ARTEMIS.Path, 1}, Tuple{Int64}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#50#53"{ARTEMIS.Motif, Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#52#55", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{typeof(ThreadsX.map), Function, Array{String, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#171#173"{ARTEMIS.Motif, String, String, Array{Array{ARTEMIS.Path, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.preprocess_args), Nothing, Tuple{Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#171#173"{ARTEMIS.Motif, String, String, Array{Array{ARTEMIS.Path, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Array{String, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#171#173"{ARTEMIS.Motif, String, String, Array{Array{ARTEMIS.Path, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locate), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.FMIndexes.FMIndex{4, UInt32}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#171#173"{ARTEMIS.Motif, String, String, Array{Array{ARTEMIS.Path, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locate), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.FMIndexes.FMIndex{4, UInt32}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#171#173"{ARTEMIS.Motif, String, String, Array{Array{ARTEMIS.Path, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locate), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.FMIndexes.FMIndex{4, UInt32}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locate), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.FMIndexes.FMIndex{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.locate), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.FMIndexes.FMIndex{4, UInt32}})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Any, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Int64}}, Type{Int64}})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Int64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Any, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Int64}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.in), Int64, Base.Set{Int64}})
precompile(Tuple{typeof(Base.push!), Base.Set{Int64}, Int64})
precompile(Tuple{typeof(Base.iterate), ARTEMIS.FMIndexes.LocationIterator{4, UInt32}, Int64})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#171#173"{ARTEMIS.Motif, String, String, Array{Array{ARTEMIS.Path, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}, Array{Nothing, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#171#173"{ARTEMIS.Motif, String, String, Array{Array{ARTEMIS.Path, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Nothing, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Nothing, 1}, Array{String, 1}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{InlineStrings.String31, 1}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{InlineStrings.String31, 1}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(DataFrames._cycle_permute!), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(DataFrames._cycle_permute!), PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.SubIndex{DataFrames.Index, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{InlineStrings.String31, 1}, Int64})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, InlineStrings.String31})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, InlineStrings.String15})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, InlineStrings.String1})
precompile(Tuple{Type{Base.Set{T} where T}, Base.UnitRange{Int64}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, PooledArrays.PooledArray{InlineStrings.String1, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(DataFrames.check_mapping_allowed), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{InlineStrings.String31, 1}, Nothing, Nothing})
precompile(Tuple{typeof(DataFrames.prepare_on_col), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Vararg{AbstractArray{T, 1} where T}})
precompile(Tuple{Type{DataFrames.OnCol{T, N} where N where T}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Vararg{AbstractArray{T, 1} where T}})
precompile(Tuple{typeof(Base.all), Function, Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base._all), DataFrames.var"#682#684", Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base._all), DataFrames.var"#683#685"{Int64}, Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, Base.Colon})
precompile(Tuple{typeof(Base.convert), Type{Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}}, Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), DataFrames.OnCol{Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(Base.isempty), DataFrames.OnCol{Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(Base.issorted), DataFrames.OnCol{Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}})
precompile(Tuple{typeof(DataFrames._semijoin_sorted), DataFrames.OnCol{Tuple{PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, Base.BitArray{1}})
precompile(Tuple{Type{Base.Order.By{ARTEMIS.var"#175#210", Base.Order.ForwardOrdering}}, Function, Base.Order.ForwardOrdering})
precompile(Tuple{Type{Base.Order.By{ARTEMIS.var"#175#210", Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}}, Function, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
precompile(Tuple{Base.var"#sort##kw", NamedTuple{(:rev, :by), Tuple{Bool, ARTEMIS.var"#175#210"}}, typeof(Base.sort), Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Base.UnitRange{Int64}, 1}, Int64})
precompile(Tuple{typeof(Base.getproperty), Base.UnitRange{Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Array{Base.UnitRange{Int64}, 1}, Base.UnitRange{Int64}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#179#214"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Base.UnitRange{Int64}, 1}, ARTEMIS.var"#179#214"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}})
precompile(Tuple{typeof(Base._similar_for), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#178#213"}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.ndims), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#178#213"}, Int64})
precompile(Tuple{typeof(Base.map), Function, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#180#215"{ARTEMIS.Motif}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#180#215"{ARTEMIS.Motif}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#185#220", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#185#220"}})
precompile(Tuple{typeof(Base.Iterators.product)})
precompile(Tuple{typeof(Base.length), Base.Iterators.ProductIterator{Tuple{}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Tuple{}}})
precompile(Tuple{typeof(Base.map), Base.Iterators.var"#5#6", Tuple{Array{Int64, 1}, Tuple{}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Int64, 1}, Tuple{}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base._similar_for), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Type{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#186#221"}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, ARTEMIS.var"#186#221"}, Int64})
precompile(Tuple{typeof(Base._similar_for), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Type{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#185#220"}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.ndims), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}, Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#185#220"}, Int64})
precompile(Tuple{typeof(Base.collect), FASTX.FASTA.Reader{TranscodingStreams.TranscodingStream{TranscodingStreams.Noop, Base.IOStream}}})
precompile(Tuple{typeof(Transducers.initialize), Nothing, Function})
precompile(Tuple{typeof(Transducers.start), Function, Nothing})
precompile(Tuple{typeof(ThreadsX.Implementations.return_nothing), Nothing, Vararg{Nothing}})
precompile(Tuple{typeof(Transducers.completebasecase), Function, Nothing})
precompile(Tuple{typeof(Base.promote_typejoin_union), Type{Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Tuple{Base.UnitRange{Int64}, Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}}, 1}}})
precompile(Tuple{typeof(ThreadsX.foreach), ARTEMIS.var"#187#222"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, String, ARTEMIS.PAMinFMI, Int64, ARTEMIS.GenomeInfo, String, ARTEMIS.Motif}, Base.Iterators.Enumerate{Array{String, 1}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#187#222"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, String, ARTEMIS.PAMinFMI, Int64, ARTEMIS.GenomeInfo, String, ARTEMIS.Motif}}, Transducers.BottomRF{Transducers.Completing{typeof(ThreadsX.Implementations.return_nothing)}}}, Nothing, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.Iterators.Zip{Tuple{Base.UnitRange{Int64}, Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}}}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#187#222"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, String, ARTEMIS.PAMinFMI, Int64, ARTEMIS.GenomeInfo, String, ARTEMIS.Motif}}, Transducers.BottomRF{Transducers.Completing{typeof(ThreadsX.Implementations.return_nothing)}}}, Nothing, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.Iterators.Zip{Tuple{Base.UnitRange{Int64}, Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}}}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#187#222"{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, String, ARTEMIS.PAMinFMI, Int64, ARTEMIS.GenomeInfo, String, ARTEMIS.Motif}}, Transducers.BottomRF{Transducers.Completing{typeof(ThreadsX.Implementations.return_nothing)}}}, Nothing, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.Iterators.Zip{Tuple{Base.UnitRange{Int64}, Base.SubArray{String, 1, Array{String, 1}, Tuple{Base.UnitRange{Int64}}, true}}}, Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(ARTEMIS.getchromseq), Bool, FASTX.FASTA.Record})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(ARTEMIS.getchromseq), Bool, FASTX.FASTA.Record})
precompile(Tuple{typeof(ARTEMIS.getchromseq), Bool, FASTX.FASTA.Record})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{FASTX.FASTA.Record, 1}, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#188#223", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#188#223"}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#189#224", Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Base.Generator{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, ARTEMIS.var"#189#224"}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.length), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.length), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.length), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.length), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, Int64})
precompile(Tuple{Base.Iterators.var"#14#16"{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#18#19"{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.vec), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 2}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.vec), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 2}})
precompile(Tuple{typeof(Base.vec), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 2}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.map), Function, Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#190#225", Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#190#225"}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#190#225", Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#190#225"}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#190#225", Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.mapreduce), Function, Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.mapreduce), Function, Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.mapreduce), Function, Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.vec), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 2}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#190#225", Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#191#226"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#191#226"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#191#226"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}, Int64})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#191#226"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Array{Int64, 1}, 1}, Int64})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#192#227"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#192#227"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.mapreduce), Function, Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#191#226"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.mapreduce), Function, Function, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#192#227"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#193#228"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#193#228"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#193#228"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.sum), Array{Int64, 1}})
precompile(Tuple{typeof(Base.sum), Array{Int64, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#193#228"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Sort.searchsortedlast), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.sum), Array{Int64, 1}})
precompile(Tuple{typeof(Base.Sort.searchsortedlast), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#192#227"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Sort.searchsortedlast), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#196#231"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#196#231"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#193#228"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#197#232"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#197#232"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#193#228"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#197#232"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#200#235", Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#200#235", Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.lastindex), Array{Int64, 1}})
precompile(Tuple{typeof(Base.lastindex), Array{Int64, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#196#231"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#200#235"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#200#235"}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#196#231"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#200#235"}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#200#235", Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#200#235"}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#191#226"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#201#236"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#201#236"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#201#236"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#201#236"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#201#236"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#202#237"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#202#237"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#202#237"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#202#237"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Generator{Array{Tuple{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, ARTEMIS.var"#200#235"}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#203#238"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#201#236"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Sort.searchsortedfirst), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#203#238"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#203#238"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#201#236"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#206#241"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#203#238"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#207#242"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#206#241"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#206#241"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#207#242"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Sort.searchsortedfirst), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#203#238"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#202#237"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Array{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, 1}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#206#241"{ARTEMIS.FMIndexes.FMIndex{4, UInt32}}, typeof(Base.vcat), Base.IndexLinear, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{ThreadsX.Implementations.var"##_map#71", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(ThreadsX.Implementations._map), Function, Base.Iterators.Zip{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.BitArray{1}}}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}})
precompile(Tuple{typeof(Base.convert), Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Base.Iterators.Zip{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.BitArray{1}}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.Iterators.Zip{Tuple{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{Bool, 1, Base.BitArray{1}, Tuple{Base.UnitRange{Int64}}, true}}}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.Iterators.Zip{Tuple{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{Bool, 1, Base.BitArray{1}, Tuple{Base.UnitRange{Int64}}, true}}}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.Iterators.Zip{Tuple{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{Bool, 1, Base.BitArray{1}, Tuple{Base.UnitRange{Int64}}, true}}}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.Iterators.Zip{Tuple{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{Bool, 1, Base.BitArray{1}, Tuple{Base.UnitRange{Int64}}, true}}}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#129#134"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Transducers.unreduced), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Base.Iterators.Zip{Tuple{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Base.BitArray{1}}}})
precompile(Tuple{typeof(ThreadsX.map), Function, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#130#135"}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#130#135"}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{Bool, 1}})
precompile(Tuple{typeof(ThreadsX.Implementations.reshape_as), Array{Bool, 1}, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}})
precompile(Tuple{typeof(Base.Threads.threading_run), ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Bool})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Base.Threads.var"#1#2"{ARTEMIS.var"#433#threadsfor_fun#136"{ARTEMIS.var"#433#threadsfor_fun#131#137"{Int64, Array{Int64, 1}, Base.ReentrantLock, Array{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, 1}, Array{Int64, 2}, Int64, ARTEMIS.SuffixDB, Array{ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64, Base.Threads.Atomic{Bool}, Base.UnitRange{Int64}}}, Int64}})
precompile(Tuple{Type{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned}, ARTEMIS.Loc{UInt8, UInt32}, Int64, String, String})
precompile(Tuple{typeof(ARTEMIS.insert_offtarget!), Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Offtarget{UInt8, UInt32}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, ARTEMIS.Offtarget{UInt8, UInt32}, ARTEMIS.Offtarget{UInt8, UInt32}})
precompile(Tuple{typeof(ARTEMIS.is_in_range), ARTEMIS.Offtarget{UInt8, UInt32}, ARTEMIS.Offtarget{UInt8, UInt32}, Int64})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{InlineStrings.String31, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(<=)), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(<=)), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{InlineStrings.String15, 1, InlineStrings.String15, Base.Missing, Array{InlineStrings.String15, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{InlineStrings.String15, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s81", 1} where var"#s81"}, Array{InlineStrings.String15, 1}})
precompile(Tuple{typeof(Base.length), Array{InlineStrings.String15, 1}})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{InlineStrings.String15, 1}, Int64, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{InlineStrings.String15, 1}, Int64})
precompile(Tuple{typeof(Base.firstindex), Array{InlineStrings.String15, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Array{Int64, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, ARTEMIS.var"#65#69"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Base.UnitRange{Int64}, 1}, Base.Generator{Array{Base.UnitRange{Int64}, 1}, ARTEMIS.var"#59#61"{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.DBInfo}}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, Type{Tuple{21, 16}}})
precompile(Tuple{Type{StaticArraysCore.Size{(21, 16)}}})
precompile(Tuple{typeof(Base.prod), StaticArraysCore.Size{(21, 16)}})
precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{21, 16}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{21, 16}, T, 2, L} where L where T}})
precompile(Tuple{Type{Tuple}, StaticArraysCore.Size{(21, 16)}})
precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{21, 16}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{21, 16}}})
precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{21, 16}, T, 2, L} where L where T}})
precompile(Tuple{Type{StaticArrays.Length{336}}})
precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{21, 16}}})
precompile(Tuple{typeof(StaticArraysCore.tuple_minimum), Type{Tuple{21, 16}}})
precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{21, 16}, T, 2, L} where L where T}, Array{BioSymbols.DNA, 1}})
precompile(Tuple{Type{ARTEMIS.AmbigIdx}, StaticArraysCore.SArray{Tuple{21, 16}, BioSymbols.DNA, 2, 336}, Array{String, 1}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, StaticArraysCore.SArray{Tuple{21, 16}, BioSymbols.DNA, 2, 336}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.Size{(21, 16)}, Int64})
precompile(Tuple{typeof(StaticArrays._axes), StaticArraysCore.Size{(21, 16)}})
precompile(Tuple{typeof(Base.argtail), StaticArrays.SOneTo{16}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.SArray{Tuple{21, 16}, BioSymbols.DNA, 2, 336}, Int64, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Int64, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Int64, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Int64, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}}}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#116#118"{String, Int64, TwoBit.Reader{Base.IOStream}, ARTEMIS.DBInfo}, typeof(Base.union), Base.IndexLinear, Array{String, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#66#70"{ARTEMIS.DBInfo, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(DataFrames._innerjoin_sorted), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#143#144"{String, Int64, TwoBit.Reader{Base.IOStream}, ARTEMIS.DBInfo}, typeof(Base.union), Base.IndexLinear, Array{String, 1}})
precompile(Tuple{typeof(Base.println), Base.TTY, String, Vararg{Any}})
precompile(Tuple{Type{DataFrames.DFPerm{O, T} where T<:Tuple{Vararg{AbstractArray{T, 1} where T}} where O<:Union{Tuple{Vararg{Base.Order.Ordering}}, Base.Order.Ordering}}, Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{InlineStrings.String31, 1}}})
precompile(Tuple{typeof(Base.sort!), DataFrames.DataFrame, Base.Sort.MergeSortAlg, DataFrames.DFPerm{Base.Order.ForwardOrdering, Tuple{Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{InlineStrings.String31, 1}}}})
precompile(Tuple{typeof(DataFrames._semijoin_sorted), DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, DataFrames.OnCol{Tuple{Array{InlineStrings.String31, 1}, Array{Int64, 1}, Array{UInt32, 1}, Array{Int64, 1}, Array{UInt32, 1}}, 5}, Base.BitArray{1}})
precompile(Tuple{typeof(Base._mapreduce), ARTEMIS.var"#95#100"{String, Int64, TwoBit.Reader{Base.IOStream}, ARTEMIS.DBInfo}, typeof(Base.union), Base.IndexLinear, Array{String, 1}})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr})
precompile(Tuple{typeof(ARTEMIS.isinclusive), BioSymbols.DNA, BioSymbols.DNA})
precompile(Tuple{typeof(ARTEMIS.commonprefix), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(ARTEMIS.commonprefix), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, typeof(ARTEMIS.isinclusive)})
precompile(Tuple{typeof(ARTEMIS.commonprefix), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, typeof(BioSymbols.iscompatible)})
precompile(Tuple{typeof(ARTEMIS.hamming), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(ARTEMIS.hamming), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Function})
precompile(Tuple{typeof(BioSequences.count_naive), Base.var"#97#98"{typeof(ARTEMIS.isinclusive)}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(ARTEMIS.levenshtein), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, typeof(ARTEMIS.isinclusive)})
precompile(Tuple{typeof(ARTEMIS.pa_sa), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.Aln, Symbol})
precompile(Tuple{typeof(Base.collect), Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.rand), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(ARTEMIS.getseq), Int64})
precompile(Tuple{typeof(BioSequences.count_naive), Base.var"#97#98"{typeof(Base.isequal)}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(ARTEMIS.getseq)})
precompile(Tuple{typeof(Base.copy), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.lastindex), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(ARTEMIS.prefix_align), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64, Int64})
precompile(Tuple{typeof(ARTEMIS.suffix_align!), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.:(==)), ARTEMIS.Aln, ARTEMIS.Aln})
precompile(Tuple{typeof(Base.:(!=)), ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{typeof(Base.rand)})
precompile(Tuple{Main.var"#mutate_suffix!#9", BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Int64})
precompile(Tuple{typeof(ARTEMIS.suffix_align!), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PrefixAlignment{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Int64})
precompile(Tuple{typeof(Base.:(!=)), ARTEMIS.Aln, ARTEMIS.Aln})
precompile(Tuple{typeof(Base.lastindex), Array{String, 1}})
precompile(Tuple{typeof(Base.vcat), Array{String, 1}, String, String, Vararg{String}})
precompile(Tuple{Base.var"#cat##kw", NamedTuple{(:dims,), Tuple{Base.Val{1}}}, typeof(Base.cat), Array{String, 1}, Vararg{Any}})
precompile(Tuple{Base.var"##cat#155", Base.Val{1}, typeof(Base.cat), Array{String, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base._cat), Base.Val{1}, Array{String, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_eltypeof), Array{String, 1}, String, Vararg{String}})
precompile(Tuple{typeof(Base.promote_eltypeof), String, String, Vararg{String}})
precompile(Tuple{typeof(Base.promote_eltypeof), String})
precompile(Tuple{typeof(Base._cat_t), Base.Val{1}, Type{String}, Array{String, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.cat_size_shape), Tuple{Bool}, Array{String, 1}, String, Vararg{String}})
precompile(Tuple{typeof(Base._cat_size_shape), Tuple{Bool}, Tuple{Int64}, String, String, Vararg{String}})
precompile(Tuple{typeof(Base._cat_size_shape), Tuple{Bool}, Tuple{Int64}, String})
precompile(Tuple{typeof(Base.cat_similar), Array{String, 1}, Type{String}, Tuple{Int64}})
precompile(Tuple{typeof(Base.__cat), Array{String, 1}, Tuple{Int64}, Tuple{Bool}, Array{String, 1}, Vararg{Any}})
precompile(Tuple{typeof(Base.__cat_offset!), Array{String, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, Array{String, 1}, String, Vararg{String}})
precompile(Tuple{typeof(Base.__cat_offset!), Array{String, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, String, String, Vararg{String}})
precompile(Tuple{typeof(Base.__cat_offset!), Array{String, 1}, Tuple{Int64}, Tuple{Bool}, Tuple{Int64}, String})
precompile(Tuple{typeof(Base.Filesystem.joinpath), Array{String, 1}})
precompile(Tuple{Type{ARTEMIS.Motif}, String})
precompile(Tuple{Type{ARTEMIS.DBInfo}, String, String, ARTEMIS.Motif})
precompile(Tuple{Type{Array{String, 1}}})
precompile(Tuple{typeof(ARTEMIS.gatherofftargets!), Array{String, 1}, ARTEMIS.DBInfo})
precompile(Tuple{Type{Array{UInt64, 1}}})
precompile(Tuple{typeof(Base.:(==)), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{UInt64, 1}, Int64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt64, 1}, Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt64, 1}, Int64}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{String}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt64, 1}, Int64}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt64, 1}, Int64}}}}})
precompile(Tuple{Type{Array{UInt128, 1}}})
precompile(Tuple{typeof(ARTEMIS.gatherofftargets!), Array{UInt128, 1}, ARTEMIS.DBInfo})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{UInt128}})
precompile(Tuple{typeof(Base.Broadcast.combine_styles), Base.RefValue{Type{UInt128}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt128}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}})
precompile(Tuple{typeof(Base.isequal), BioSymbols.DNA})
precompile(Tuple{typeof(Base.isprimitivetype), Any})
precompile(Tuple{typeof(Base.:(*)), UInt32, UInt32})
precompile(Tuple{typeof(Base.:(>>)), UInt32, UInt8})
precompile(Tuple{typeof(Base.:(+)), UInt32, UInt32})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.convert), Tuple{Base.RefValue{Type{UInt128}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{UInt128, 1}, Int64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt128, 1}, Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt128, 1}, Int64}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{String}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt128, 1}, Int64}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{String}, Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{UInt128, 1}, Int64}}}}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:distance,), Tuple{Int64}}, Type{ARTEMIS.Motif}, String})
precompile(Tuple{typeof(ARTEMIS.build_PathTemplates), Int64, Int64})
precompile(Tuple{typeof(Base.repeat), Array{Char, 1}, Int64})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Array{Int64, 1}, 1}}})
precompile(Tuple{typeof(Combinatorics.multiset_permutations), Array{Char, 1}, Int64})
precompile(Tuple{typeof(Base.vcat), Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Vararg{Array{Int64, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#10#16", Combinatorics.MultiSetPermutations{Array{Char, 1}}})
precompile(Tuple{typeof(Base.promote_result), Type, Type, Type{Base.MPFR.BigFloat}, Type{Union{}}})
precompile(Tuple{typeof(Base.promote_result), Type, Type, Type{Union{}}, Type{Base.MPFR.BigFloat}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Combinatorics.MultiSetPermutations{Array{Char, 1}}, Main.var"#10#16"}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{String, 1}})
precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Int64, Base.Val{6}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:by,), Tuple{ARTEMIS.var"#45#48"}}, Symbol})
precompile(Tuple{Type{Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}}, Function, Base.Order.ForwardOrdering})
precompile(Tuple{ARTEMIS.var"#templates_to_sequences##kw", NamedTuple{(:dist,), Tuple{Int64}}, typeof(ARTEMIS.templates_to_sequences), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PathTemplates})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Type{Transducers.Map{F} where F}, ARTEMIS.var"#44#47"{Int64}})
precompile(Tuple{Transducers.var"#tcollect##kw", NamedTuple{(:basesize,), Tuple{Int64}}, typeof(Transducers.tcollect), Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.complete), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Transducers.CancellableDACContext, Transducers.SizedReducible{Base.SubArray{Array{Int64, 1}, 1, Array{Array{Int64, 1}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#43#46"{Array{BioSymbols.DNA, 1}}}, Transducers.BottomRF{Transducers.Completing{typeof(Base.vcat)}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{Transducers.var"#167#168"{Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, BangBang.NoBang.Empty{Array{T, 1} where T}, Transducers.NoopDACContext, Transducers.SizedReducible{Base.SubArray{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64}}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Transducers.combine), Transducers.Reduction{Transducers.Map{ARTEMIS.var"#44#47"{Int64}}, Transducers.Reduction{Transducers.Map{Type{BangBang.NoBang.SingletonVector{T} where T}}, Transducers.BottomRF{Transducers.Completing{typeof(BangBang.append!!)}}}}, Array{ARTEMIS.Path, 1}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#93#94"{ThreadsX.Implementations.ParallelMergeSortAlg{Base.Sort.MergeSortAlg, Int64, Int64}, Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ThreadsX.Implementations.var"#91#92"{Base.Order.By{ARTEMIS.var"#45#48", Base.Order.ForwardOrdering}, Int64, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.SubArray{ARTEMIS.Path, 1, Array{ARTEMIS.Path, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{ARTEMIS.var"#templates_to_sequences##kw", NamedTuple{(:dist,), Tuple{Int64}}, typeof(ARTEMIS.templates_to_sequences), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PathTemplates, ARTEMIS.Motif})
precompile(Tuple{ARTEMIS.var"#templates_to_sequences_extended##kw", NamedTuple{(:dist,), Tuple{Int64}}, typeof(ARTEMIS.templates_to_sequences_extended), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, ARTEMIS.PathTemplates})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#11#18"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Main.var"#11#18"{Int64, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Int64, 1}, Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, 1}, Int64})
precompile(Tuple{typeof(Base.setdiff), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Type{Base.Set{T} where T}, Array{Any, 1}})
precompile(Tuple{typeof(Base.:(==)), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Base.Set{Any}})
precompile(Tuple{typeof(Base.filter), Main.var"#13#20"{Int64}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Base.map), Function, Array{ARTEMIS.Path, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#12#19", Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.Path, 1}, Base.Generator{Array{ARTEMIS.Path, 1}, Main.var"#12#19"}})
precompile(Tuple{typeof(Base.filter), Main.var"#15#22"{Int64}, Array{ARTEMIS.Path, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#14#21", Array{ARTEMIS.Path, 1}})
precompile(Tuple{typeof(Base.collect_similar), Array{ARTEMIS.Path, 1}, Base.Generator{Array{ARTEMIS.Path, 1}, Main.var"#14#21"}})
precompile(Tuple{Main.var"#setdiff_by_size#17", Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(Base.Filesystem.mktemp)})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Base.IOStream}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Base.IOStream}, Int64, Int64})
precompile(Tuple{typeof(Base.vect), BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, Vararg{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Type{Main.TestSeq}, Bool, Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}})
precompile(Tuple{typeof(ARTEMIS.save), Main.TestSeq, String})
precompile(Tuple{typeof(Base.getproperty), Main.TestSeq, Symbol})
precompile(Tuple{typeof(Base.:(==)), Bool, Bool})
precompile(Tuple{typeof(ARTEMIS.setdist), ARTEMIS.Motif, Int64})
precompile(Tuple{typeof(ARTEMIS.combinestrings), String, String})
precompile(Tuple{typeof(Base.length), ARTEMIS.Motif})
precompile(Tuple{typeof(Base.isequal), ARTEMIS.Motif, ARTEMIS.Motif})
precompile(Tuple{typeof(Base.:(==)), Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{Type{ARTEMIS.Loc{UInt8, UInt32}}, Int64, Int64, Bool})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, Type{Tuple{4, 4}}})
precompile(Tuple{Type{StaticArraysCore.Size{(4, 4)}}})
precompile(Tuple{typeof(StaticArrays.has_size), Type{StaticArraysCore.SArray{Tuple{4, 4}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArrays.has_ndims), Type{StaticArraysCore.SArray{Tuple{4, 4}, T, 2, L} where L where T}})
precompile(Tuple{typeof(Base.size), Type{StaticArraysCore.SArray{Tuple{4, 4}, T, 2, L} where L where T}})
precompile(Tuple{typeof(StaticArraysCore.tuple_length), Type{Tuple{4, 4}}})
precompile(Tuple{typeof(StaticArrays.has_eltype), Type{StaticArraysCore.SArray{Tuple{4, 4}, T, 2, L} where L where T}})
precompile(Tuple{Type{StaticArrays.Length{16}}})
precompile(Tuple{typeof(StaticArraysCore.tuple_prod), Type{Tuple{4, 4}}})
precompile(Tuple{typeof(StaticArraysCore.tuple_minimum), Type{Tuple{4, 4}}})
precompile(Tuple{Type{StaticArraysCore.SArray{Tuple{4, 4}, T, 2, L} where L where T}, Array{BioSymbols.DNA, 1}})
precompile(Tuple{Type{ARTEMIS.AmbigIdx}, StaticArraysCore.SArray{Tuple{4, 4}, BioSymbols.DNA, 2, 16}, Array{String, 1}})
precompile(Tuple{Type{StaticArraysCore.Size{S} where S}, StaticArraysCore.SArray{Tuple{4, 4}, BioSymbols.DNA, 2, 16}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.Size{(4, 4)}, Int64})
precompile(Tuple{typeof(Base.argtail), StaticArrays.SOneTo{4}})
precompile(Tuple{typeof(Base.getindex), StaticArraysCore.SArray{Tuple{4, 4}, BioSymbols.DNA, 2, 16}, Int64, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getproperty), ARTEMIS.AmbigIdx, Symbol})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Base.BitArray{1}})
precompile(Tuple{Type{Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}}})
precompile(Tuple{Type{ARTEMIS.Loc{T, K} where K<:Unsigned where T<:Unsigned}, UInt8, UInt8, Bool})
precompile(Tuple{Type{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned}, ARTEMIS.Loc{UInt8, UInt8}, Int64, String, String})
precompile(Tuple{typeof(ARTEMIS.insert_offtarget!), Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}, ARTEMIS.Offtarget{UInt8, UInt8}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.length), Array{ARTEMIS.Offtarget{T, K} where K<:Unsigned where T<:Unsigned, 1}})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, ARTEMIS.Offtarget{UInt8, UInt8}, ARTEMIS.Offtarget{UInt8, UInt8}})
precompile(Tuple{typeof(ARTEMIS.is_in_range), ARTEMIS.Offtarget{UInt8, UInt8}, ARTEMIS.Offtarget{UInt8, UInt8}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Nothing}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Nothing}, Int64, Int64})
precompile(Tuple{typeof(Base.:(-)), Int128, Int128})
precompile(Tuple{typeof(Base.div), Int128, Int128})
precompile(Tuple{typeof(Base.rem), Int64, Type{Int128}})
precompile(Tuple{typeof(Base.parse), Type{Int128}, String})
precompile(Tuple{typeof(ARTEMIS.safeadd), UInt16, UInt16})
precompile(Tuple{typeof(Base.:(-)), UInt16, UInt16})
precompile(Tuple{typeof(ARTEMIS.smallestutype), UInt64})
precompile(Tuple{Type{Unsigned}, Int128})
precompile(Tuple{typeof(Base.convert), Type{UInt128}, UInt8})
precompile(Tuple{typeof(Base.convert), Type{UInt128}, UInt16})
precompile(Tuple{typeof(Base.convert), Type{UInt128}, UInt32})
precompile(Tuple{typeof(ARTEMIS.smallestutype), UInt128})
precompile(Tuple{typeof(ARTEMIS.base_to_idx), Char})
precompile(Tuple{typeof(ARTEMIS.minkmersize), Int64, Int64})
precompile(Tuple{Type{Base.UnitRange{T} where T<:Real}, Base.UnitRange{Int64}})
precompile(Tuple{Type{NamedTuple{(:ambig_max,), T} where T<:Tuple}, Tuple{Int64}})
precompile(Tuple{typeof(Base.haskey), NamedTuple{(:ambig_max,), Tuple{Int64}}, Symbol})
precompile(Tuple{typeof(Base.:(==)), UInt16, UInt16})
precompile(Tuple{Type{Test.Threw}, Any, Union{Nothing, Array{Any, 1}}, LineNumberNode})
precompile(Tuple{typeof(Test.do_test_throws), Test.ExecutionResult, Any, Any})
precompile(Tuple{typeof(Base.:(==)), Base.SubString{String}, String})
precompile(Tuple{typeof(Base.:(==)), Tuple{Int64, Int64}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.isempty), Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.:(==)), Array{Base.UnitRange{Int64}, 1}, Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#18#19"{Tuple{Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{BioSymbols.DNA}, 1}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Tuple{BioSymbols.DNA}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA}, 1}}}})
precompile(Tuple{Base.Iterators.var"#14#16"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#18#19"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{BioSymbols.DNA, BioSymbols.DNA}, 2}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Tuple{BioSymbols.DNA, BioSymbols.DNA}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA}, 1}}}})
precompile(Tuple{Base.Iterators.var"#14#16"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#18#19"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 4}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Base.Iterators.var"#14#16"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#18#19"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 5}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}})
precompile(Tuple{Base.Iterators.var"#14#16"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#12#13"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{Base.Iterators.var"#18#19"{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}, Array{BioSymbols.DNA, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 6}, Base.Colon})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}, Tuple{Array{Tuple{BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA, BioSymbols.DNA}, 1}}}})
precompile(Tuple{typeof(Base.push!), Array{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}, 1}, BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}})
precompile(Tuple{typeof(Base.isempty), Base.Set{BioSequences.LongSequence{BioSequences.DNAAlphabet{4}}}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{w, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned where w}, Array{UInt8, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{8, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt8, 1}})
precompile(Tuple{Type{IntArrays.IntArray{8, T, 1} where T}, Array{UInt8, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices._build!), Type{IndexableBitVectors.SucVector}, IntArrays.IntArray{8, UInt8, 1}, Array{IndexableBitVectors.SucVector, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{8, UInt8, IndexableBitVectors.SucVector}}, Tuple{IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Base.length), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{8, UInt8, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Base.getindex), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{8, UInt8, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(IndexableBitVectors.rank), UInt8, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{8, UInt8, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices.select), UInt8, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{8, UInt8, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices.freq), UInt8, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{8, UInt8, IndexableBitVectors.SucVector}, Int64, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{w, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned where w}, Array{UInt64, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{64, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt64, 1}})
precompile(Tuple{typeof(IntArrays.mask), Type{UInt64}, Int64})
precompile(Tuple{Type{IntArrays.IntArray{64, T, 1} where T}, Array{UInt64, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices._build!), Type{IndexableBitVectors.SucVector}, IntArrays.IntArray{64, UInt64, 1}, Array{IndexableBitVectors.SucVector, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{64, UInt64, IndexableBitVectors.SucVector}}, Tuple{IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Base.length), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{64, UInt64, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Base.lastindex), Array{UInt64, 1}})
precompile(Tuple{typeof(Base.getindex), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{64, UInt64, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{UInt64, 1}, Int64})
precompile(Tuple{typeof(Base.:(==)), UInt64, UInt64})
precompile(Tuple{typeof(Base.iterate), Array{UInt64, 1}})
precompile(Tuple{typeof(Base.length), Array{UInt64, 1}})
precompile(Tuple{typeof(IndexableBitVectors.rank), UInt64, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{64, UInt64, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{UInt64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.count), Function, Array{UInt64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#24#30"{UInt64}, Array{UInt64, 1}})
precompile(Tuple{typeof(Base._simple_count_helper), Base.Generator{Array{UInt64, 1}, Main.var"#24#30"{UInt64}}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{UInt64, 1}, Int64})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices.select), UInt64, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{64, UInt64, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Main.seq_select), UInt64, Array{UInt64, 1}, Int64})
precompile(Tuple{typeof(Base.length), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, UInt8, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Base.lastindex), Array{UInt8, 1}})
precompile(Tuple{typeof(Base.getindex), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, UInt8, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.UnitRange{UInt8}})
precompile(Tuple{typeof(Base.getindex), Array{UInt8, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.count), Function, Array{UInt8, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#25#31"{UInt8}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base._simple_count_helper), Base.Generator{Array{UInt8, 1}, Main.var"#25#31"{UInt8}}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.UnitRange{UInt8}, UInt8})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices.select), UInt8, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, UInt8, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Main.seq_select), UInt8, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.rand), Base.UnitRange{UInt32}, Int64})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{17, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt32, 1}})
precompile(Tuple{typeof(IntArrays.mask), Type{UInt32}, Int64})
precompile(Tuple{Type{IntArrays.IntArray{17, T, 1} where T}, Array{UInt32, 1}})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices._build!), Type{IndexableBitVectors.SucVector}, IntArrays.IntArray{17, UInt32, 1}, Array{IndexableBitVectors.SucVector, 1}})
precompile(Tuple{Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{17, UInt32, IndexableBitVectors.SucVector}}, Tuple{IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Base.length), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{17, UInt32, IndexableBitVectors.SucVector}})
precompile(Tuple{typeof(Base.lastindex), Array{UInt32, 1}})
precompile(Tuple{typeof(Base.rem), UInt32, Type{UInt32}})
precompile(Tuple{typeof(Base.getindex), ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{17, UInt32, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.UnitRange{UInt32}})
precompile(Tuple{typeof(IndexableBitVectors.rank), UInt32, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{17, UInt32, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{UInt32, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.count), Function, Array{UInt32, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#26#32"{UInt32}, Array{UInt32, 1}})
precompile(Tuple{typeof(Base._simple_count_helper), Base.Generator{Array{UInt32, 1}, Main.var"#26#32"{UInt32}}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.UnitRange{UInt32}, UInt32})
precompile(Tuple{typeof(ARTEMIS.FMIndexes.WaveletMatrices.select), UInt32, ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{17, UInt32, IndexableBitVectors.SucVector}, Int64})
precompile(Tuple{typeof(Main.seq_select), UInt32, Array{UInt32, 1}, Int64})
precompile(Tuple{Type{NamedTuple{(:destructive,), T} where T<:Tuple}, Tuple{Bool}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:destructive,), Tuple{Bool}}, Type{ARTEMIS.FMIndexes.WaveletMatrices.WaveletMatrix{2, T, B} where B<:Union{Base.BitArray{1}, IndexableBitVectors.AbstractIndexableBitVector} where T<:Unsigned}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.length), Array{UInt8, 1}})
precompile(Tuple{typeof(Base.rand), Type{UInt8}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#27#33"{UInt8}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base._simple_count_helper), Base.Generator{Array{UInt8, 1}, Main.var"#27#33"{UInt8}}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#28#34"{UInt8}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base._simple_count_helper), Base.Generator{Array{UInt8, 1}, Main.var"#28#34"{UInt8}}, Int64})
precompile(Tuple{typeof(Base.rand), Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#29#35"{UInt8}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base._simple_count_helper), Base.Generator{Array{UInt8, 1}, Main.var"#29#35"{UInt8}}, Int64})
